package aihash

import (
	"reflect"
	"testing"

	"github.com/bytom/common/hexutil"
	"github.com/bytom/protocol/bc"
)

// TestCreateSeed test that seed can be correctly created.
func TestCreateSeed(t *testing.T) {
	testSlicePreSeed := []struct {
		preSeed   bc.Hash
		blockHash []*bc.Hash
		seed      []byte
	}{
		{
			preSeed:   bc.BytesToHash(hexutil.MustDecode("0x7f5979fb78f082e8b1c676635db8795c4ac6faba03525fb708cb5fd68fd40c5e")),
			blockHash: bytesToSlicePointerHash(hexutil.MustDecode("0x0eb076dade912e4e2aea455e9225ef5d7c36aa6d5c66440218f408067da9e7ba")),
			seed:      hexutil.MustDecode("0x01609e244d962cf47f7aefd47f83c93e07318f859b9a2ebcd70000b3c70b1d03"),
		},
		{
			preSeed: bc.BytesToHash(hexutil.MustDecode("0xfe3c889716ee7ff8828dfc64a773c4912e215a9b82f1df38fd0de3a9e6f6c38b")),
			blockHash: bytesToSlicePointerHash(hexutil.MustDecode("0x" +
				"e93187549f97232af825848c2d5b28b58d57576799ada949d8d93c1db27a2e80" +
				"5f0dc2afa924f7ade0a1dc615113e9824728d360db19ecfdb52dff951189d755" +
				"f78003d615e2e347beb32599fec8c8ee9258becd3f839bf4d4d452e9061215a9" +
				"570eef870a250610b369c78830ac8df420b96abb7895cd98d06c5bb56ada27b9" +
				"848a4be077e0657ebee4926092d7490eb89030dffa0345d58a9fea6c881d5651" +
				"d4f470e76bd9af8496b503f049a0ef76b9a5b9fbbe866c8a49b54c46fcb6045c" +
				"36f046a5d86d48d05b2ca9b75ddcc88bead3190d108cf6ab0ff54c10a2392128" +
				"d8e09450803a2f18f67379efd90a3bcc73bc16205ea82570ebea21d8d11e3dce" +
				"2b231bde13b8e334b77e3c967a7eb7b257e2717f994ff9031c06f7f5f6ad76f7" +
				"a1c0df7dbac7fecbf9aa5249bd14a2e63de79e0cf3be1c0c434c19c62c427e8b" +
				"5c24d450ecfd42d33dc6736f69dddca59916e17b0adde1e93aee37eabb00c72d" +
				"b2351d01babc4663e8a11fe1923c3fa3d54e0af8c840bec755d7f0244f21b689" +
				"0f6ae56a7aa7281ff120e94dc86bc924f6d467b0fcac715312ca9d9bb894d3e0" +
				"b8aceaf8f72acd01a2a2737b1b813dd69d521d087d8cb80fe93eb28a38b22bf1" +
				"ba7660b875626774f93f75bee5a90501385e03fe702f7da587892598e0805fa7" +
				"3285f542afbab848c624dd4ad9423b9d265707d18d44c74a998ea84ca02363e5")),
			seed: hexutil.MustDecode("0x28240f593b479bb1709278a06351a741e5893c908ace50e711219bddf41f2211"),
		},
		{
			preSeed: bc.BytesToHash(hexutil.MustDecode("0x40aa575363fc90aef55bd1001362f319ea5aa861858f9d81fe3a271ee64497a0")),
			blockHash: bytesToSlicePointerHash(hexutil.MustDecode("0x" +
				"43ff2d59fc3a085ef57df59da93db9126f7715c24779c583d1855e01f39ee526" +
				"1afb18e671a449f24d77164e4da34d6aa357468ca18ef923540c8561a8414b34" +
				"2573a0e77261f4d52efeafc7414f758d231bb55e6c5a5d7ffb82e1a0cbe910b9" +
				"31e204d418d7c6268ed3d37f91f625a3b4e09ff6e7add7ed6b0ec0795da1c0c8" +
				"94f47f36d75327117b206d7110021bcfb956d34e64189f83e890f289d98a0b36" +
				"d5c8842cb66f5207d52d2309b9adac0ded46e8c6af20dcafb063b80d3fb21688" +
				"3fa95965ae59564bc5ab481fa85b13f3e91320d73b45a1f5155cb92b3be2ae54" +
				"6d764d770b60be493c3e83ee5f74936302db28541762c3cf0a2f73a029925193" +
				"82e597b7235d260db97451c91c086804deace061fe981fb2bff2d3557cfd53dc" +
				"754ce51c9b6928d6413f7bd680d182fa77bad25ef4a593585b26a31e0a32277f" +
				"1af9597caf31848b9f2b734d4712acc1e557ed73ae869eea43af855bc5a1f7e0" +
				"6ee4ade9f4c0807bd8cd125feb32acc8aba1747011f85467f0a0d405765da142" +
				"01648a8fe4b9bc1a561e49fd0bfb8568bbc1a2a4c62b656cba1a50b67636dad4" +
				"26f28bd50b7169ad9ca84caa25cf0e9da47ac17c7b864ddfb29920f456fee90b" +
				"98ebebf840540e89e66b440e7eda7bca1f2e80c48f0fa503f140254a89313d02" +
				"b1bb2fee73ecc07caad986f3e0418d908e2a8f171c313cde9b10207a2ff5c55d" +
				"6634698f01eb701dc99968f87abf3d5234dac958b28964210c83aeb6ea916e90" +
				"11bdec74102d0a449095c1aee3ab94a01019089b806592c083c7b3204996ce84" +
				"99aaffb092e8d5353d7ae11a468445455d7bbc18a0ef791de8ac92f4be5d3b6b" +
				"999bc6d7b5e9f5169145ce85bf8b3126741594ac88a54914396ef1caca1b8fdf" +
				"b8d1e1735297bc4c5cce908e324a462f01c18894b5584c4021e134951a6e175e" +
				"dab265b2c95ab93e0ccebbbc1a48df426946e8e4b9654fe0055515593467a0a0" +
				"3fe96b14ab895565581675e99443c091997b8508f9d7aeee381b167034ed4c33" +
				"a68f255ba00b5729824918af13c3d0f8c199d0c70974000488222c2c3c4273d9" +
				"a7c3ecd17e5e9a28b10701ef230c1f062eaeedb4a5227449d9018061e59deb65" +
				"df07c4dd1c37925c2f426b42080825b07e47157fe2d5cae8bd6d0758d520b09e" +
				"939811d5156d430f3dc510ca967668c9fd7736ab3c340a35e248030bab94bde6" +
				"06e5c37ee8a9b0c830bce7544dafaeff632a444f32af3c6c704f9955ab81f824" +
				"47c6bee4544e1e71f736a29031fe0875b969976aef1fa88b65f1b62fe4d210cf" +
				"cadb7f1e04ac11c76a26e97971d17643ab83c606e40e855e9bf1c07d28b5c927" +
				"8524c56b8e75f559e1ddd54c4dad0205b69e010209839532eba84eda4f138302" +
				"f25353798ab8548c327d2048b439736de4e278c4618eed92e12ef7ed9b5cb5ef" +
				"c30869d560137ad8419c3258c107c9e60665347fedbaef335fb7507401093ac9" +
				"3d37bce36b649181b3a359a09061ec86ea141f85b83fdd8ec5e9456afa681dc8" +
				"51ffdfb7afa41d74bdc047298b5b19dbef610280ac60d7190c2068147b9eabb4" +
				"a90f28f55da9fa7af9901f9c0a6c8863c8c8c10e3d7e7c74337e3aa08b3e5fc5" +
				"a6d52ce8f478d55890e86a2c0527e1a7e68766113dcbc82706652f45fbc93076" +
				"961c5cea55436a184362097db0b6148b48cfffbb220f361c84d88eb3e6ea6309" +
				"650fdbf021df105682637a578de3b195a09feb6610321095737d7c388b2aa3be" +
				"ea8a0f16a3b9a65ca0b0135957b271dca02b06443c3115e8b60528c8f5441d29" +
				"a8f454b7bd2be133d16cbed056c17391267fc2daef2e442fc124396b66f8c49d" +
				"e30c7639802f2dbd57d1faae4ed08940036db667ae530b2519b7dc506f50573c" +
				"91785d38ea98cf80b8c03832c138445e69e53c0c0e3151e8423835f6234d0467" +
				"892360421234cd69cfb6e3285f7d82204bd03e151cc6e63854f9f5c8e99f8fd8" +
				"750d4867a1b90cb1ea62c3a6f300897420d8486248c58ad25eb7e6ea3fbbf604" +
				"10a56d24ca835f9cf9e67dbc13eceb2a833584124cdc224b30058a634a88068a" +
				"c3da986c20646d7052f6f878237e898c54219e35628829c198d3b5c03771ae9d" +
				"8661094c17d552a3d7fc56ed2ec43ed444cc00a58b37d01f7b693ef24c13e6bb" +
				"731e7e876f24127e84188723ef0ef4dfe3dc2d0459e7f82fa7e57eda7b4288be" +
				"50664d6a5f419c780915b2797a13ba98a64e2b691ce5362f82ddc9f677d07976" +
				"d046195ae9bb6c1763194d8b6984e27e348bc6b79b68c9adf8ba9d6177617d8a" +
				"ff696df38ee73a6b434a2ea8c81e31a66d811e9471f55a378a9b2b714acbff00" +
				"c46da49e66fda0ef95dde54b9d2ecbd3bb98233cf523cbd717c2a83ceb35f1fa" +
				"2abec1ece36068c1524b855a1223104d7eb91f8d3a2e7cc9ca4a97698df5078e" +
				"289a4e6daef95f1bec11b3f88e09555bc2bf1ab9ab013f8b89fa7d02ca8d4701" +
				"7211790d168cf85e44c68078e4d078c06439faf21bff5d7fdb508cdc466b0f0e" +
				"de53e7191838c48b7b07e06df7ed1e55832b6165c63adaa4d60ac5f3a29dbc94" +
				"99619b1afaf4abd5bb670cb70e40250b668703397e39e1b67eca4cd663a6c0fa" +
				"0611dc68928bc18ac02047540cba4da500d8711e50ffd457e03c7b40849724de" +
				"502f4c6ed2e145220a3308e7eb01d59a49f447ea3771a0de8a6f0bb85b5d323c" +
				"c12f07a13110936065b78ccf09caf1964ca909f8529e47da1dd81bbd35cbde0e" +
				"43aaa3392d3666099ecc31ec42de62b804b1e80e44a1be207a11f346ff0b435d" +
				"f993c45158461768172b8b7b5dbc8aa7749f97ab4038020dc58a5d1e6d69ddef" +
				"4563a24c3f067edf5a4fcfe8fdb4c7096b391f574481287786b7ce9f086e7a8c" +
				"7542e3ab82eb4cef8f062f67d41a986f04eac19661d077d805c88ee4b894238c" +
				"24b25793271ab2bd93ce571bb2118e6aee4636920851c85e6d992010df9581a3" +
				"838731eb206a4074e4ce9b5bcbf9793030c504fab03f4d7cd1ada849124a6b32" +
				"5bf1e1e14a50b419993053ce5f9de9bbad044a82cc24b99484c07590a2275373" +
				"9ff5c15ee7325a996234302d01c991b6349ea71b3433837c2749f983e344b42f" +
				"ebadace478a812b695c2233b3485e0bedcbe3ae912e496ad2ace9c0f4e5a63e4" +
				"6d15fa02e5115aab7c77af8722dbe87a1a62214623732217daa335a49555f9d9" +
				"ff1e8e36e76edef72975ce30c674f38686892eb4d795808c586c9de810531690" +
				"ff07219499137c6864e5a72565d3b1b03b782a89c88dd638a4e51748a48923ef" +
				"4dbc730a60468e7f49ecc8ffccf038b036cc49f137cf2ac47edd2afc7bfd8a74" +
				"cc6ff774a9039e7eb780689ff2ebb41a68ae4dfcf1b625c48e388feda1d6edf3" +
				"6adc3eaab29d84d53379d4299f64e1789c20ca72a557f502b231fd4292c39c69" +
				"73c76014d33825d0029aad184633b25c5cfdee489c8c177bfa2c0ee997ab9731" +
				"b8a16bbc1f1a9a8c030a984dfd3977813320a2683ac23592b21e04bf46c47555" +
				"f8073555abec4792c2567bccc8c0b22e635ea74b0a76e8993f65defaef6b2d08" +
				"dbd5ce702e0eacae0380b22e1cf1e21305bf4e4dd67679f24b8ef8453211ce95" +
				"cec16cd62671406f9bcbad75a2cf14d26c64c6bd2d7aad194625b305d14883a5" +
				"74235441b8c8034bbb46a74a4ca7d12914bc20cd68b14c55d03db9342234d354" +
				"4cfc17a7846dea2c87d1450aca850ee9e3d0d09f2e0f18b45669c6bc6d59083b" +
				"a094a96e5d9526cbf2fa82be3bfd8f12e357778d4f40c8340ecd1199a7bbe0b1" +
				"20d5dea90386e7f3047569b3f3ea1a72c36928342c8c9b3cfb9c3cf5528fed0c" +
				"9e69b11a0feb730d04df13e002c85b3ff7c2622425c21ba9b955912b123de653" +
				"72aa90be2b341a6fe9ef7bd02fc618ba211d111beadcca196b3e5f385b1c4ee7" +
				"757d42f4e6f15afe91aa5e7cb598c53921d867ee56da7daa9ce83884ddf5d9d3" +
				"447286fb71f996147b94e98ad6d7f4741f19c2e73983f990794895b60c7ec76a" +
				"af37a91c21b714bbe953f1a59787d8e68fb3f12ba964ec97fce710b9d3c6c84c" +
				"e4bc0e6288bfa82e66bf73d5086d9e2602d104167ad0bc45c3a5cc3ea03fe445" +
				"f3ec7d9a4aab905d4ed2745bda5c46c1c606e61e25330449b536bf79869e648e" +
				"9ecc57d99ea0d7835a83c781d5d59f4fce7cc0dbcba23864b190b5b44ed8ed29" +
				"ae4f829bc825796dc927ec52e2138e0504637a73cb4feaaae0cd8595eca1c2af" +
				"beac2cd0df957cacb3a117bef463216c8347f6a7d2022e335f0ff28bab417837" +
				"4e1f3cf4146c9a26ca00f786d9ae0b7d9ed9ebfbb773ace265afde2b24d62c8c" +
				"061b0b9a16bf3601355ff0c79329a811281d46afe2fdcdaf0fae3ec8f45eab79" +
				"53ee578dc0a12c7a41298a43653613539058b1f71fef9118878505707b69e655" +
				"b2247231ae14cedaabac45203f4ee773ef24e0aa6c3242d41bf5637277a60bd0" +
				"6837e6657f1aeb7ac8c4a545d81111741769b6ed4c6f4c2700f11f0c3c5ecba3" +
				"9d46f9063fe0b94491cee674c8e589680f66b0869006aa264a7a4a0c066bb25b" +
				"2a1543383b19c8a5c12dd284d87af4d8e0d5bcec178d7ea83f3c9452637a5558" +
				"f5d794d4ce6ae53af6d52e9fedc80d34092f6d8e561f3fcdb7d52d60fb97aad4" +
				"de1e2523c8e78cd6fed5e0b4d82328d27d2aa04006c5016064f37b98273322a2" +
				"8b490ad23ce1084aefbf7194e574ce8fd0dcb825a462e9715cf583038c71f331" +
				"4222d11f3bd37a163ba33673fbaa069772c9915b7de1d703c996c0966f48fb0c" +
				"c8bcfdf3efd4dcef505a66f1b98089aff0a96a7fba0a4cecd92d8f12d70e842a" +
				"48a68f171a6a277a0083efc81a279fed8f7b26c6c503f7289d717ab3e0ab0222" +
				"def0c318208caa962fab895ae972c9494ef40ac2ac7a1e2acd280f4c4fd6fd0e" +
				"787c5324b9c90fe40e74f159a9068c795a26ef4b6dae362e744d96c20ba4489a" +
				"4dcd745806512104d4f311c5a5ba777307771e6c1e42894d9319f2507bce863c" +
				"6bf1a22c0940ede6628e35fd7c8616760aa5404c92fc55c97acaf5a34d297950" +
				"8a7e7a5c935171a2e97f37b3ce7734e88c0dc58148071c2a707d1ac783777bd3" +
				"e9d286b4beeca1465471390b3dbf8733df1cb6f81a889f2e8578756e098ff720" +
				"9dc2b2b1101a8b3af594dedd67efbf7b7fcd0207355ccc525c00425c619d71da" +
				"7a23cf897f647e29f827ba5bff9a4c047a2e000478cb3239e6f008931911958d" +
				"08fb5e8d2178a2eb7d10146308568bb1341b9a00e4aab21a0d4b3813f4a445a2" +
				"2d8c41a1913942caf48f3b464f3895b7cecabbede3c5bd59335d18b6f6995f3b" +
				"fa009eb1ae8d6fddbe8706b02075f5b82a42a434000856b821206bcfafe4961d" +
				"493a999402b35789d92d7457555f18ec6e8ff4279912d6dd8f9a68c84be47ff9" +
				"dacee303c5ff9421f363426f7e1e011a4dae8065fe41aad6e0704930184417d0" +
				"9df7743acecca87da7c1eefeb003140cb4a8bf48f8d71541759aee45573b924f" +
				"9b776a0e8addb010fd3a334251170c50f613963cab41ce73e7f7a0eb6160fc4b" +
				"7233b9c111d902bbbf1ce38264a820f21b79c144397c19f385e7f952316171ac" +
				"6d6490e093538ef46a9422f52a777d36533e49993f7a5a18673a01ba22b6e45e" +
				"716b3ccd9ed920f0facb27dd5df40133dd2821f9421fd1e866b74346b85169e5" +
				"85981a22d50dde5822263d241ef438dcfb70bc230d2e57c7e5de3e70021aa68e" +
				"57554ec6fd2c404b28afb6b1e14cd38d11fb0df1111a0dd455ec0c83033a7937")),
			seed: hexutil.MustDecode("0xb17d1c5601497db0a396a1909cdfebf4ce1daa1af7fd35c97f9e4ff12afc3861"),
		},
	}
	for i, tt := range testSlicePreSeed {
		seed := createSeed(&tt.preSeed, tt.blockHash)

		if !reflect.DeepEqual(seed, tt.seed) {
			t.Errorf("seed %d: content mismatch: %x, right is: %x", i, seed, tt.seed)
		}
	}
}

// Tests that verification caches can be correctly generated.
func TestGenerateCache(t *testing.T) {
	tests := []struct {
		size  uint64
		seed  []byte
		cache []byte
	}{
		{
			size: 1024,
			seed: hexutil.MustDecode("0x0000000000000000000000000000000000000000000000000000000000000000"),
			cache: hexutil.MustDecode("0x" +
				"e0028c951d70b506f3da3f5cc26256decec29b2b13cbd902b766e0e6830e6602ed9aded0cb2cdedd0c712f159c207542d765cb271c80af0de8a4b3158f5078a3" +
				"facf7f92c9a066bb8ded2405508deaac26f61d08cf56f9952418365cd1109452cb7702c0bfaf25d23fc6bca0e4d87e30ccf012689e00ad77698c0ada6d62c831" +
				"469e3c12ccb5df3b6540d975d9cadd630f4eaf3aa10a092c25bc25ce562281f474c4ae803431d22bb92678e8a4185945f60f650086f2aad6ea3ed7b0ffc75b2a" +
				"2b67911c792f6cc414ae398d16ccef91022502d1ef5bded2c5194b86d33782d727a1bb58dbffbe6109e06454284f0434754c42e2321e3a37441b2022451207a4" +
				"6299b88e96e028e59e6a38d221ab49b45b354bc4fa8e62f3ef2ade6760d4aca60f47dcb80edab7a5df474631baf8a7bbcd275de8e46f9723ea46f05f5babb7c2" +
				"243d92f5a1328a4cc9f4cb6da60ee6f7b362472f7ad4fc117e3646c85061574c12e110bdfcd98d90f0d19b6bff5b44a7c69da1975c3a8522095eb9217e553c28" +
				"f7b139d522c043ba7d897ec77f15a3491fbd0e1eeb9d4891247707db3e76fb11e73ecf03a2e1d21b1bcc78e865d8451b15d338b2cdf757d29139ed9a1abdfc78" +
				"40b3183422b8b3c461c96abda221a41c2f310fa37805f06ecf9b003928cebd9ede832e0448b6dc5ba99c94443a62f8a9a23ca8ead5f2103bba9295d0b8b35987" +
				"f91925d561cc6bb4f8155de6ed82cb0bd2c3c829c392fb82e30dfae3b42d49736afabc3f0b79d431e27dd8685afa2316accd6847fe178cd428dc0c2ac6b40c03" +
				"ee46288bfcbc4722d6116d919b453d403b57a7cec3899ba6c6eaa2a9e4e73b8c3c210d3da485c12d26d9acb780952fd0338bb8d20db14a4a5d892110a1ec19bd" +
				"7a6773fc47e0c1e1e59c5ab4a1c8fb2f86849d6b15071356e2958ea7f084d89a248afc68a9a7cc1ba96ef353bc9a7f222d0aa1b920a25c84c6e4231d3f836b5c" +
				"1d4fe8894282dc7269d9724a038500118cb8e74922ebc17c046df6ef5c707c278f4b9ed3325e3af7659233f10e1a3fb1d96702fb364692810f53f79b037edff2" +
				"973af9d6d6819434c34dfb0ac4f22c977f627ea0013ecec6a49339ff09dd011876741e26bac7e64191ed17e1ab423c6358a5e36702f841b2607d0639d2e87061" +
				"d77fec191b2e020b0df5f7daf4491e9a6701f66d103c6feaf6d67aa4cbb877bbed87461ceeb4eee6148a5cfc8070dd79c9e34ff072e2e5a553259794ac027fec" +
				"e41ee110c41a9582cd2f5368c98a95f7b6ba93520046e819debfc3c93f5100462aaf7616c84a6d872ec0ee13b69b5226e7c9937d3f3f5f511c31921b492bba38" +
				"e1140b92e1c20aac1a2c81ac51f80a79cfbe4aa1a31a18e7c58ebf3a0a151ce7c2f761769d5e4e09a72ba0771cf840ecfc1416348260379c5ffa04cf4feaf437"),
		},
		{
			size: 1024,
			seed: hexutil.MustDecode("0x9e6291970cb44dd94008c79bcaf9d86f18b4b49ba5b2a04781db7199ed3b9e4e"),
			cache: hexutil.MustDecode("0x" +
				"b0930b1af3bbdb6cf86dffaba042b186fc0e0380f2cbab6cc9282d18768364ae8313dc9b899273f35aab6247412b7a7fe42993af481e20e324666c640186fcd3" +
				"31d4feeea3c62dc91a9117cef60e8e51a644d47c3641558c04adefbd6d170e68da7f7f35c6f3c83c6cca5156df5c2d5affe1823b5cbde280fd383aa894268e3f" +
				"68c9502be1893aeab172831e8ce036a2d0fb7e488d4aa99aaceda25e082a0407505e0bef8aeda0f2661751f00bfcd6a3509f6fa5fcba58bbb0054145f2d4873c" +
				"d97644d0daeb9d7d9fb99746a983e5a36d7f409775d1eb87e4aa781d3ef3caad480271ed37fbf38940ba43a1eb93959cbd20756bf7f9c45704ce3d6663753f95" +
				"ca9a0a9d8043e8ad3914451a8032b204ccf4bdbadbe4226ac002f80f73278a0f0a4312c4ef9fed775bc7f96810f09f38889a7e3dc25353cd9bb89d141d698f35" +
				"243d92f5a1328a4cc9f4cb6da60ee6f7b362472f7ad4fc117e3646c85061574c12e110bdfcd98d90f0d19b6bff5b44a7c69da1975c3a8522095eb9217e553c28" +
				"d036d0815e3ea9be14957e09980fb3a3185e7569c9d0d87fed34f910250fba3a59ec784e90dab7e842cf01bdd75fb05f592fdc93248e5aece012e16f6211e2b9" +
				"72e95ad9e6026f3c83da205db0b12e2dfdcb86b6f4294ca77234a6cd5a361a89ff345c72ce1cba1855548409bb04c9ba58c5b20594774ab42048440f189ba1be" +
				"7c043eb10b9a998eca952d57a11632b5a82e3a61e8bd6c7b36d2db4af30d10b45e8ae329167244d66d925d62cd406d483747f100c876abad1edc12d2aa84ea62" +
				"ea0f33063faa13ea4df2016b399f71b4a73e12f68275b680d31d62e23a8c000be37f9881040d220e1e9898730525e2e5645c3a98044b78b6d28bfa4328ca1eaf" +
				"377a142dc3b54ead8d8856baad7f91994e957b9ae2d0bcffc47966a75c638b84bce644659f6266873a2561cca67ced1073096df2e6a501aa2b78105cdcbdd6bc" +
				"c4afc9d3cf5a2c228169a94b71467199c9a1e3331bd3227e07ad0fc31c3c112c55e7e9beff8879324ba307350621443e3023bc3c773118404b536ced64f47ffb" +
				"5ccd43f94e27fc6ff2080d20db51dbe7b8f4615e273fc81341b3114a727c6f6bebe76a9b672b5b4befc8eb3f459e002b8799b32636c40dcb13d999e6cca300b2" +
				"6d19580a16496e1da91c0796b2cf4704789af384e58401625d7186fd59bca64c95eef243243b44fa5920a2f4aee99ff6d7f50f3cd8812754fea4ba624ac17009" +
				"cebac75e06e61796066a839afe6ffca8436ee0651a7ed7e2ce3e981675f03be25095f66996b6de5f9e216bc0ffb868d900b43b105e00e2a57a219617e52de0d6" +
				"243d92f5a1328a4cc9f4cb6da60ee6f7b362472f7ad4fc117e3646c85061574c12e110bdfcd98d90f0d19b6bff5b44a7c69da1975c3a8522095eb9217e553c28"),
		},
	}

	for i, tt := range tests {
		cache := make([]uint32, tt.size/4)
		generateCache(cache, tt.seed)

		want := make([]uint32, tt.size/4)
		prepare(want, tt.cache)

		if !reflect.DeepEqual(cache, want) {
			t.Errorf("cache %d: content mismatch: have %x, want %x", i, cache, want)
		}
	}
}

// TestFillMatrixList tests the fillmatrixlist.
// For example, fill the 4X4 matrix list, list length is 4, the type of matrix item is int8,
// height is 1,
// []uint32 cache is:
// [4120001828 1284125345 1842083017 4159049382 793207475 301782138 3360044670 1280794960 3172000018 2425215484 1805373936 2806275071 2543951302 579156572 565796361 675042686]
// Then convert []uint32 to []int8 cache is:
// [36 61 -110 -11 -95 50 -118 76 -55 -12 -53 109 -90 14 -26 -9 -77 98 71 47 122 -44 -4 17 126 54 70 -56 80 97 87 76 18 -31 16 -67 -4 -39 -115 -112 -16 -47 -101 107 -1 91 68 -89 -58 -99 -95 -105 92 58 -123 34 9 94 -71 33 126 85 60 40]
// fill the matrix list from the cache[index], which index=prime[0]=3, so the first item of matList[0] is -11.
// No. 0
// [-11 -95  50 -118]
// [ 76 -55 -12  -53]
// [109 -90  14  -26]
// [ -9 -77  98   71]
// No. 1
// [ 47 122 -44 -4]
// [ 17 126  54 70]
// [-56  80  97 87]
// [ 76  18 -31 16]
// No. 2
// [ -67  -4 -39 -115]
// [-112 -16 -47 -101]
// [ 107  -1  91   68]
// [ -89 -58 -99  -95]
// No. 3
// [-105  92 58 -123]
// [  34   9 94  -71]
// [  33 126 85   60]
// [  40  36 61 -110]
func TestFillMatrixList(t *testing.T) {
	tests := []struct {
		data        []int8
		matSize     int
		matNum      int
		epochLength int
		cache       []uint32
		height      uint64
	}{
		{
			data: []int8{
				-11, -95, 50, -118, 76, -55, -12, -53, 109, -90, 14, -26, -9, -77, 98, 71,
				47, 122, -44, -4, 17, 126, 54, 70, -56, 80, 97, 87, 76, 18, -31, 16,
				-67, -4, -39, -115, -112, -16, -47, -101, 107, -1, 91, 68, -89, -58, -99, -95,
				-105, 92, 58, -123, 34, 9, 94, -71, 33, 126, 85, 60, 40, 36, 61, -110,
			},
			matSize:     4,
			matNum:      4,
			epochLength: 4,
			cache: []uint32{
				4120001828, 1284125345, 1842083017, 4159049382, 793207475, 301782138, 3360044670, 1280794960,
				3172000018, 2425215484, 1805373936, 2806275071, 2543951302, 579156572, 565796361, 675042686,
			},
			height: 1,
		},
		{
			data: []int8{
				-78, -74, -126, 18, 91, -93, -65, 113, -35, -116, -117, -6, -5, -11, 15, 63,
				63, -85, 122, -77, 43, -27, 42, -100, -34, 79, 115, -4, -54, -63, 47, 88,
				111, -111, 111, -48, 105, 54, -58, -52, -48, 28, 20, -89, -95, -27, 70, 21,
				-21, -57, 108, 69, -17, -23, 9, 123, -59, -86, 108, 118, -17, -126, 124, 100,
				-84, 28, -32, -98, -58, 98, -33, 38, 26, -109, -9, 53, 127, -97, -104, 92,
				-79, 44, -58, 63, 37, -76, 17, -31, -40, 11, 95, -56, -90, 95, -39, -27,
				21, 10, -7, 69, 85, 12, 89, 36, -66, 80, -17, -98, -9, -128, 112, -15,
				42, 56, -43, -118, 94, -126, 77, -90, 52, -27, -78, -9, -5, 53, 116, 55,
				-38, 87, 5, -48, 110, 68, 72, -21, -118, 42, -69, -30, 109, 75, 56, 11,
				86, -97, -40, -47, 89, -105, 92, 126, 2, 27, 95, -67, -103, 56, -56, 72,
				-75, 121, 90, 13, 46, 122, 97, 68, 75, 83, 45, 84, 64, -74, -128, 86,
				-54, 113, -82, 85, -18, 103, -108, -63, 101, 29, -27, 100, -11, -101, -6, 125,
				-75, -118, -8, -62, -3, -22, -105, -63, -123, -68, -66, 98, 45, 10, -116, 123,
				-43, -75, -82, -63, -35, 103, 56, 1, 96, -110, 11, 92, -35, 95, 118, -55,
				-68, 79, 26, 105, -37, -93, 8, -23, 9, -116, 7, 106, -106, 127, 89, 102,
				82, -107, -114, -73, 23, -93, -83, -118, -69, 115, 8, -127, -124, -118, 0, 45,
				7, -70, 81, -47, -56, -108, 6, 15, -21, -108, 3, -73, 84, -5, -54, 6,
				24, -7, 102, -36, -22, 8, -117, -41, 2, -47, 122, -70, 123, 26, 95, -113,
				-115, 52, 2, -86, -116, 106, 80, 85, 86, 93, -58, 95, -41, 46, -7, -83,
				10, -122, 91, -100, -117, 114, 99, -108, -117, 95, 120, 36, 61, -110, -11, -95,
				50, -118, 76, -55, -12, -53, 109, -90, 14, -26, -9, -77, 98, 71, 47, 122,
				-44, -4, 17, 126, 54, 70, -56, 80, 97, 87, 76, 18, -31, 16, -67, -4,
				-39, -115, -112, -16, -47, -101, 107, -1, 91, 68, -89, -58, -99, -95, -105, 92,
				58, -123, 34, 9, 94, -71, 33, 126, 85, 60, 40, 100, -11, -101, -6, 125,
				-75, -118, -8, -62, -3, -22, -105, -63, -123, -68, -66, 98, 45, 10, -116, 123,
				-43, -75, -82, -63, -35, 103, 56, 1, 96, -110, 11, 92, -35, 95, 118, -55,
				-68, 79, 26, 105, -37, -93, 8, -23, 9, -116, 7, 106, -106, 127, 89, 102,
				82, -107, -114, -73, 23, -93, -83, -118, -69, 115, 8, -122, -95, 117, -111, -73,
				41, 5, 31, -120, 91, 38, -57, 52, 61, -35, 92, -5, -93, -91, 24, -90,
				-63, -51, -54, 75, -47, 25, 101, 123, 19, 82, 38, -74, -117, 8, 63, 79,
				55, 26, 71, 81, -37, -93, 35, 122, -67, -61, 85, 16, 86, -6, -110, 17,
				61, 44, -47, 80, -110, -5, -112, 29, 124, -111, 119, -29, -17, 63, 26, 91,
			},
			matSize:     8,
			matNum:      8,
			epochLength: 4,
			cache: []uint32{
				440397795, 2193011291, 3215153938, 2341264753, 267779066, 2058043199, 719662003, 1934614172,
				801229564, 1871802200, 3325454800, 337432780, 1189454247, 1825041173, 166326085, 1823131003,
				2088955766, 3759975524, 3747792542, 4153612838, 2560589621, 3324817756, 297018687, 1594611937,
				3646924488, 4178187749, 1493980485, 4015046180, 1887500190, 3577228017, 1300389514, 3001365670,
				1949694967, 89643575, 1212444368, 3140127467, 944467426, 3634320907, 1553422801, 1595605630,
				3359152573, 1517925704, 1635397133, 760433476, 2159427668, 2926692950, 2489839189, 3843909057,
				4204524900, 4169839997, 2548760002, 3200026049, 2349477218, 2931152251, 946331073, 194142209,
				1985994076, 441433289, 144956265, 126618089, 1501533802, 2392150630, 2913146807, 141802378,
				9077889, 1371146029, 110414033, 60091151, 3405468855, 1727600646, 2332617436, 2060518103,
				1595571130, 36998543, 1349160106, 3328005717, 4180596575, 1535511213, 1668451228, 2019527572,
				4120001828, 1284125345, 1842083017, 4159049382, 793207475, 301782138, 3360044670, 1280794960,
				3172000018, 2425215484, 1805373936, 2806275071, 2543951302, 579156572, 565796361, 675042686,
				4204524900, 4169839997, 2548760002, 3200026049, 2349477218, 2931152251, 946331073, 194142209,
				1985994076, 441433289, 144956265, 126618089, 1501533802, 2392150630, 2913146807, 141802378,
				2440405382, 520432055, 3341179784, 1558002996, 413508603, 3402482086, 1696190795, 642913147,
				1057524662, 1192900431, 597941073, 1438891386, 2465879568, 3509337361, 2432406096, 2006023197,
			},
			height: 6,
		},
		{
			data: []int8{
				1, 111, -45, 70, 102, -65, -66, 14, -56, -15, 62, 122, -71, -20, 34, -2,
				29, -121, -105, 91, 76, -102, 85, -36, -108, -117, -53, -92, -112, -103, 65, 95,
				86, 120, 11, 40, 19, 123, 119, -7, 36, 79, -110, 111, 124, -59, 70, 60,
				53, -106, -31, -84, 88, -108, -5, 37, 84, 36, 61, -110, -11, -95, 50, -118,
				76, -55, -12, -53, 109, -90, 14, -26, -9, -77, 98, 71, 47, 122, -44, -4,
				17, 126, 54, 70, -56, 80, 97, 87, 76, 18, -31, 16, -67, -4, -39, -115,
				-112, -16, -47, -101, 107, -1, 91, 68, -89, -58, -99, -95, -105, 92, 58, -123,
				34, 9, 94, -71, 33, 126, 85, 60, 40, -128, -13, 64, 37, 4, 25, 48,
				-81, 87, -75, 110, -113, -10, 69, -72, 44, -47, 71, 86, 71, -40, 1, -43,
				8, -127, -28, -97, 7, -32, -102, -3, 88, 97, 2, -38, -114, 38, -19, -42,
				-34, 88, -105, 2, 68, -100, -88, -32, 105, -71, -38, -58, 109, 7, -84, -101,
				8, 49, -61, -81, -96, -34, 124, 72, 72, 64, -50, -71, -118, -42, 48, 91,
				51, 89, -36, 79, 64, 1, 9, 82, 98, -46, -36, -63, 60, -88, 23, -38,
				-59, -16, -94, 11, -90, 125, -15, -122, -54, 38, -51, 3, 117, 69, 113, -60,
				-40, -111, -103, -89, -70, 79, 40, -38, 96, -37, -84, -8, -17, 99, 64, -83,
				48, -99, -88, -127, 103, -52, 117, 27, 57, -44, -2, -14, -74, -113, 111, -115,
				126, -73, 28, 81, 61, -108, 63, -21, -84, -103, -61, 124, 22, -71, 62, 2,
				76, -109, 46, 78, -59, 29, -24, 79, 51, 98, 57, 124, 26, 24, -10, -106,
				105, 38, -18, 71, 29, 112, -68, -74, 11, 18, 116, -67, -4, 69, 126, -70,
				106, 100, 100, -89, -23, -82, 73, -16, 35, 46, -126, 84, -85, 65, 112, 50,
				-126, -80, 80, 113, 12, 34, -89, 45, -59, 33, 80, 71, 29, 50, -53, 83,
				-8, -127, -33, -31, 73, 94, 50, 115, -2, -50, -7, -89, 113, -50, 8, 114,
				29, 7, -80, -5, -8, 79, 64, 8, 18, 109, 58, 101, -128, 63, 36, 98,
				-6, 73, 7, -92, -78, -123, -107, 65, -35, 5, -6, -11, 96, -15, -75, -21,
				-120, -22, 34, -99, -97, -97, 9, 34, 88, -90, -24, -16, 36, 3, -122, 48,
				97, -24, -39, -24, 27, -53, 36, -64, -95, -46, 103, -60, -114, -34, 94, -84,
				-44, -14, -13, 74, -68, 30, -119, 111, -64, 3, -28, 92, 118, -69, 1, 32,
				60, 63, 0, -87, 19, -102, -55, 112, 82, 26, 26, 24, -61, -115, 14, 63,
				-113, -78, -96, 68, 32, 5, 23, 121, 2, 101, 28, 17, -106, 34, 68, 108,
				-126, -111, -6, -59, 89, 26, -88, 119, -97, 31, 29, -15, 125, 18, 23, -80,
				-114, 73, 12, -121, -60, 103, -38, 8, -32, -128, -63, 125, 107, 49, 82, 28,
				68, -114, 103, 43, 19, -11, -116, 52, 105, 24, 63, -104, -127, -41, -71, 75,
			},
			matSize:     8,
			matNum:      8,
			epochLength: 4,
			cache: []uint32{
				2174238488, 21739991, 1715917679, 3356409535, 3111796465, 503194348, 1281070983, 2497467802,
				2426719115, 1449083289, 321391480, 620328827, 2087686735, 893142725, 1487724950, 1411775380,
				4120001828, 1284125345, 1842083017, 4159049382, 793207475, 301782138, 3360044670, 1280794960,
				3172000018, 2425215484, 1805373936, 2806275071, 2543951302, 579156572, 565796361, 675042686,
				625013632, 2939164932, 2406397271, 750274038, 1196836817, 148177368, 127919233, 1493015264,
				2396652129, 3738627366, 1141020504, 1776330908, 1841748665, 144419847, 2695873329, 1212710110,
				2327432768, 861614294, 1078975577, 1649543425, 1019337938, 3319404456, 2785780464, 3397841277,
				1963183398, 3636752709, 3131546001, 1624909903, 4026051803, 816660579, 1736550557, 958100940,
				3069378260, 2123198351, 1028725943, 2901098388, 377275289, 1275215545, 3310235283, 860874781,
				444348770, 1771501080, 491253286, 196525168, 4240274450, 1790606917, 3920061540, 602950062,
				2874442286, 2184343617, 208752816, 3308103458, 491212833, 4166241074, 1239539585, 4268962398,
				1906833870, 494012622, 4177244167, 302530639, 2154117741, 4200735807, 2997094217, 3712062853,
				1626733061, 2297148913, 2677875434, 1478625695, 619767974, 1630569987, 468244968, 2713724107,
				2395236306, 3568066270, 3159028722, 3228535070, 1985799171, 1008730555, 329842751, 1383123354,
				3273136666, 2403274381, 541368498, 41490181, 2517703781, 2188133410, 1506146961, 2675419162,
				2112953631, 2393904914, 3297184841, 3758676583, 1803403648, 1142706737, 321611662, 1765051637,
			},
			height: 103,
		},
	}

	for i, tt := range tests {
		matList := make([]matrix.Matrix, tt.matNum, tt.matNum)
		for j := 0; j < tt.matNum; j++ {
			matList[j] = matrix.New(tt.matSize, tt.matSize, tt.data[j*tt.matSize*tt.matSize:(j+1)*tt.matSize*tt.matSize])
		}

		ml := make([]matrix.Matrix, tt.matNum, tt.matNum)
		fillMatrixList(ml, tt.matSize, tt.matNum, tt.epochLength, tt.cache, tt.height)

		if !reflect.DeepEqual(ml, matList) {
			t.Errorf("matrixList %d: content mismatch: ml %x, matList %x", i, ml, matList)
		}
	}
}

// TestMulMatrix tests mulMatrix
func TestMulMatrix(t *testing.T) {
	tests := []struct {
		matData    []int8
		matSize    int
		matNum     int
		mulRounds  int
		matIndex   []byte
		resultData []int8
	}{
		{
			matData: []int8{
				50, -118, 76, -55, -12, -53, 109, -90, 14, -26, -9, -77, 98, 71, 47, 122,
				-44, -4, 17, 126, 54, 70, -56, 80, 97, 87, 76, 18, -31, 16, -67, -4,
				-39, -115, -112, -16, -47, -101, 107, -1, 91, 68, -89, -58, -99, -95, -105, 92,
				58, -123, 34, 9, 94, -71, 33, 126, 85, 60, 40, 36, 61, -110, -11, -95,
			},
			matSize:   4,
			matNum:    4,
			mulRounds: 10,
			matIndex:  hexutil.MustDecode("0xc5fa98aca9ec66e1373a5a65d6d9d143b9b77465402fc4cf1bad038d0ca3f5fe"),
			resultData: []int8{
				-81, -63, -128, -82, -92, 105, -79, -2, 77, 70, 36, 113, -29, -93, -110, 16,
			},
		},
		{
			matData: []int8{
				117, -96, 126, 64, 10, 13, -16, -110, -20, -76, 114, 101, 62, 43, 48, -102,
				-93, -101, 110, 127, 94, 98, -74, 123, -77, 7, -8, -72, -85, 102, -105, -56,
				-11, -68, 108, -41, -42, 42, 28, 73, 113, -49, 115, 96, -72, -29, 29, 24,
				97, 70, 16, 71, 94, -35, 70, -57, -1, 123, -39, -98, 64, -113, -52, -24,
				-118, -34, 107, 60, -7, 62, 54, -122, -45, -100, 69, 9, -85, 19, 54, 48,
				-31, 126, -31, 21, 2, 74, 92, -58, -40, 5, 47, -48, -53, -45, -99, 30,
				-13, 4, 30, -30, -62, -94, -125, 116, -30, -46, 3, 4, -39, 41, -83, 77,
				-65, 9, 20, -118, 47, -120, -51, -77, 94, -119, -51, 103, 106, -62, 124, 99,
				91, 1, -4, -1, -15, 33, -51, -51, 83, -33, -22, -58, 100, 31, -26, 79,
				-78, -120, 11, 35, -119, 91, 107, -6, -105, -51, 111, -21, 14, 45, -3, -35,
				-56, -8, -11, -48, -13, -95, -107, -89, -10, 50, 108, -76, 73, 50, -67, 104,
				-37, -13, 27, 50, 20, 25, 83, -120, -55, 124, -55, -120, 100, 76, 83, -99,
				53, -42, 121, 69, -90, 4, -112, 114, -24, 45, -127, -118, 40, -78, 35, -76,
				-102, -78, -127, -14, 101, 60, 122, -88, 61, -17, 93, -84, 61, -56, 62, 82,
				41, -100, -68, 8, 41, -106, -115, 51, 57, -99, -116, -42, 64, 96, -57, 7,
				4, -32, 50, -128, -73, -60, 49, -78, 78, -128, -108, -91, 16, 65, 1, -41,
				9, -121, 68, 120, 1, -25, 16, -75, -49, -80, -103, -47, -47, -78, 89, 108,
				90, -9, -46, -88, -62, -7, -75, 124, -12, -56, -4, 116, 73, -81, -18, -33,
				-62, 82, -60, 40, -39, -37, -22, 37, -36, 100, 32, -23, 44, -102, -31, 27,
				98, -29, 37, 74, -69, -3, -69, 122, 81, 74, -10, 113, 103, 109, -9, 12,
				52, 127, 110, 16, -53, 56, 39, -76, -67, 107, -118, -102, -79, -56, 111, 91,
				106, -102, 119, -11, -14, -35, 53, -34, 54, 31, -91, -61, -125, 12, 51, -37,
				-33, -105, 106, 70, -3, 112, 122, -8, 2, -16, -54, -68, 5, -37, 94, -78,
				-10, 23, 120, -75, -72, -9, 79, -70, -22, -118, -57, 12, -40, -76, -46, -31,
				-41, -35, -65, 58, -89, 77, 50, 47, 66, -40, 37, -26, 57, -77, 29, -65,
				-109, -80, -49, 47, -98, -75, 15, -115, -74, -96, 10, -76, -83, 11, 48, -93,
				-92, -27, 120, -54, 26, -76, 0, -36, 114, 58, -112, 1, 116, -121, -29, 61,
				-102, 97, 95, 90, -86, -46, -109, 104, 34, -82, 1, -123, -121, -43, 84, 110,
				-33, 78, -118, -45, -73, -51, -18, -114, -10, 99, 44, -37, 59, -121, 45, -61,
				120, -38, -20, -91, 87, 85, -121, 76, 16, 127, 75, -122, -128, 14, 20, 70,
				77, -5, 46, -112, 91, -90, 125, 96, -98, -94, -29, -42, 75, -84, -52, 30,
				-58, 58, 58, 76, -102, -104, -104, -118, -16, -27, -78, 85, -67, -113, -50, 63,
				71, 92, -25, 69, -41, -103, 13, 7, -85, 26, 103, -56, -41, 23, -81, -11,
				-5, -85, 98, -27, 9, -38, 68, 62, 81, 16, -52, -123, 94, -74, 81, 110,
				29, -128, 30, 53, -71, 27, -9, 83, -87, -19, -27, -45, -69, -66, -4, -35,
				37, -29, 70, 33, -113, -76, -84, 89, 118, -95, 71, 101, 28, 87, 64, -114,
				-96, 112, 65, 17, 3, -79, 38, -105, 68, 42, -22, 0, -26, -56, -104, -69,
				26, -49, -8, -112, 45, -72, -29, 111, -40, 122, 19, -10, -74, -35, -65, 76,
				22, -11, -25, -15, 37, -49, -114, 102, -106, 107, 64, -66, -85, 121, 127, 62,
				29, 88, -87, 42, 19, 43, -123, -97, -23, 39, -19, 42, -108, -13, -62, 10,
				115, 102, 20, -86, 24, -119, 6, 91, 72, -13, -40, -5, -42, 86, 19, 1,
				94, 94, -128, 89, 81, -103, -29, -77, -1, -32, 0, 89, -21, 54, 15, 72,
				-102, 8, -92, -86, -109, -96, -73, -104, 6, 4, -110, 7, -36, 74, -36, 3,
				10, -111, 56, 109, 45, -91, 122, 101, 46, 124, 34, 122, -43, -37, 26, -96,
				121, 111, -94, -22, 31, -124, -79, 40, -97, 59, 7, 7, 17, -113, 54, 101,
				-16, 124, 28, -80, 29, -109, 42, 106, -118, -87, -50, -37, 40, 114, -71, -24,
				-25, -105, 124, 25, 76, -98, 77, 73, -64, 28, 109, 79, -112, -70, 96, 19,
				-111, -51, -111, 112, 90, -114, 12, -5, -55, -4, -3, 99, 100, 115, 126, 10,
				89, 78, -60, 24, 31, -124, -56, 24, 69, -122, -30, -95, -50, 51, -13, -128,
				15, -14, 83, 100, 92, 0, 39, 26, 88, 8, -76, 88, -63, -30, 55, 29,
				-55, -21, 115, -102, 117, -111, -105, -107, -1, 73, -85, -18, -40, -99, 102, 54,
				68, 93, 77, 4, 88, -123, -114, -104, 31, 29, 48, 99, -66, -66, 118, -98,
				74, -94, -38, 24, 33, 123, -64, 10, 33, 57, -14, 111, -87, 53, 89, -51,
				-45, 32, -56, -56, 13, -64, -109, 123, 91, 70, -52, 104, -109, -124, -21, 67,
				-93, -61, 0, -59, -35, 113, -125, 96, -90, -51, -41, -36, -123, 87, 116, 71,
				-59, 115, -54, -75, 119, 105, 11, 117, -62, 25, -45, -10, -16, -32, 84, 21,
				104, -19, 55, 45, 127, 65, -37, -81, 108, -17, -13, -58, 30, -110, 61, 71,
				12, 118, -6, 76, 122, 30, -73, 79, 101, -3, -63, 100, -82, -72, 55, -113,
				-116, 90, 11, 79, 126, 38, 27, 68, -52, 95, 79, 15, -86, -33, 118, 30,
				-6, -17, -13, -74, -68, -39, -107, -46, -37, -26, -56, -106, 84, 78, 84, -125,
				-95, -7, -55, -3, -101, 69, 2, -19, -72, -51, 40, -13, -36, -68, 70, 0,
				96, -87, 121, 75, -22, -124, 7, 41, 39, 109, 99, 87, -33, 121, -25, -41,
				-115, -99, -95, -108, -1, 48, 72, -23, -30, 96, 87, -93, 12, -20, 68, 91,
				33, 50, -5, -62, -79, -33, 95, -24, 20, -83, -109, -103, -12, -128, -99, 16,
				-29, 36, -50, 55, -75, -4, -2, -22, -101, -3, 50, -1, -9, 41, -44, -55,
				-124, -54, -116, -15, -37, 117, 40, 103, 126, -36, -71, -98, 34, 90, -25, 53,
				88, -69, 71, -31, 67, 98, -28, -38, 119, -75, 18, -109, -121, -55, 23, 34,
				8, 51, 93, 67, 46, 60, -112, 25, -100, -40, 84, -94, 24, -66, 112, 99,
				-96, 80, 69, 80, -87, -39, 67, -122, -3, -41, 61, -58, -64, 88, 17, 101,
				-20, 127, 30, 23, -83, 68, -38, -6, -61, -11, 23, 10, -82, 10, -12, 5,
				-81, 102, -105, 69, -10, 18, -98, 66, -124, 94, -40, -66, 16, -3, 56, -20,
				-92, 67, 30, 33, 90, 77, -14, -92, -15, -50, 92, -86, -46, 112, 6, 65,
				-27, 79, 98, 45, 107, 83, -57, 26, 57, -101, 43, 85, -80, -45, 11, -111,
				-86, -39, 124, -54, 28, -101, -41, -115, -56, 122, 85, -92, 106, 68, 94, 27,
				-24, 1, -41, -9, -61, -85, 15, 92, -112, 98, 93, -57, -40, -75, -90, -110,
				81, 82, 99, 56, -40, -67, -36, 125, 74, -23, 39, 26, 113, -110, -66, -105,
				-105, -62, -40, 87, -82, 96, -7, -49, -21, -104, -114, 127, -27, -46, -93, -55,
				-77, -11, -43, -34, -94, -100, -116, 6, -30, 76, -69, -3, -20, -88, -56, 115,
				-35, 113, 3, -23, 123, 34, -114, -115, 45, -45, 8, -16, -127, -40, -82, -85,
				95, 105, -1, -54, 57, -98, -49, 69, 115, -14, 85, 28, -22, 9, 14, 31,
				-110, -13, 68, -39, 31, 100, 14, 117, -91, 77, -50, 113, -103, 109, -8, -44,
				-94, 86, 115, 67, 108, 112, 24, -58, 108, -26, -121, -70, 50, 47, -85, -5,
				42, -26, -56, 83, -52, -121, -25, -90, 126, -67, 70, 112, 114, -92, -128, 78,
				70, -9, -98, -123, 6, -61, -28, -76, -2, -55, -45, 75, 31, -104, 86, 56,
				36, 75, 56, -65, 82, 85, -18, -88, 5, -91, 3, -65, -16, -79, -78, 67,
				-83, -73, -124, -110, 20, -10, -66, -3, -62, -36, -102, -53, 115, -124, -50, 1,
				13, 34, -27, 107, 41, 32, -26, 94, -128, 13, 115, 104, -9, 94, -84, -39,
				-11, 17, -20, 73, -73, -2, -120, -75, 48, 95, 15, -95, -53, 114, -65, 70,
				13, -78, 84, 114, -43, 21, -87, -43, 31, -68, -83, 4, -69, -94, -27, -16,
				26, 119, -6, 109, -84, -24, -111, 78, -43, 100, -40, -17, -73, 91, 123, 123,
				36, -114, -11, -109, -108, 8, -41, 53, -30, -68, 47, 123, -14, -15, -65, -101,
				13, -86, 45, -78, 109, 87, 56, -118, 127, 71, -123, 127, 67, 53, 70, 9,
				-115, -61, -79, -62, -54, -22, 66, 28, -62, -17, 35, -20, 126, -94, 60, 94,
				-46, 95, -36, -77, 0, -108, -19, -13, 35, 100, 69, 73, -112, -119, -10, -43,
				29, 121, -50, 78, 18, -62, 12, -118, 24, -57, 84, 58, 37, 92, -122, -59,
				-120, -8, 89, -40, -120, 29, -96, 34, -127, 49, -34, -123, -58, 58, -41, 15,
				-29, -40, 13, -73, -82, -91, 55, -59, 72, 29, -46, 51, 28, 98, -47, 116,
				-43, -109, -123, 122, -105, 66, -104, 116, -98, 29, -7, 99, 63, 114, -40, 83,
				-39, 49, 72, -35, -127, 76, -92, 119, 60, -6, -52, -1, 70, 126, -109, 21,
				93, 24, -3, 95, 15, -64, 99, -28, -60, 103, 59, -80, -127, 111, -78, 28,
				45, 106, -32, 5, -125, -94, 57, 88, 95, -72, -108, -105, 4, -1, 105, 14,
				-113, -107, -96, -41, -1, 37, -99, 18, -90, 117, 41, -8, -112, 46, 62, 21,
				74, 105, 10, -74, -10, 48, 28, 121, 33, -104, 56, -96, 23, 9, -59, -78,
				18, 103, -77, -102, 98, -36, -88, -70, 99, -27, -127, 77, 74, 56, 107, 82,
				-24, 76, -127, -74, -27, 71, 40, 75, -31, -111, -15, -67, 10, -92, -126, -108,
				-90, -12, 88, -54, -75, 50, 78, 31, -67, 69, 41, -52, -9, 62, -126, -39,
				69, 78, 79, -41, -115, -24, -7, -109, 29, 46, 121, -40, 44, 46, 18, 10,
				-70, 52, 39, 19, -17, -122, -115, 112, -79, -32, 124, 4, -74, 105, 30, -76,
				-50, 66, 31, 127, -27, 16, -37, -62, 98, -46, -2, -122, 2, -75, 34, 121,
				121, 42, 110, -128, 49, 107, 112, 39, 38, -124, -94, -117, -83, -101, 123, -125,
				27, -87, -74, 112, -108, 84, -122, -128, -55, -37, -61, 85, -128, 79, -32, -94,
				110, -33, 113, -127, 31, 39, 35, -71, 123, -65, 32, 53, 65, 20, -19, -104,
				86, -13, -108, 53, -21, 9, -86, 92, -23, 104, 68, 36, -78, -101, -52, 71,
				56, 112, 10, 99, -25, 127, 42, -44, 72, -88, 112, -97, -104, -6, -26, 96,
				29, 92, 87, 0, 113, -107, -65, 28, 3, -128, 91, 104, -10, -24, 113, -15,
				-97, -41, 98, -42, -40, 59, 33, -113, -103, 25, 123, -104, -109, -71, -1, 30,
				-73, -110, -94, -41, -31, -99, 56, 86, -22, -4, 19, 119, -76, -13, -124, 74,
				31, -124, -33, -58, 33, 32, 27, -115, 33, -52, -100, -47, 44, 110, -50, -55,
				-6, 6, -39, -30, 100, -2, 37, 17, -61, -73, -99, -59, 63, -53, -113, 6,
				124, 111, -33, 62, 45, -122, -7, -86, -112, 96, 52, -17, 105, 24, -40, -48,
				-22, 103, -97, -91, -68, -41, -100, 16, 8, 75, 123, 77, 98, -118, -103, -119,
				-40, -86, -69, -34, -22, 116, 21, -45, 34, -106, 30, -89, -110, 51, 82, -127,
				-6, -70, -75, -94, -108, -117, 45, 49, -45, -49, -89, 11, -111, 43, -65, -52,
				-124, 26, 120, 33, -97, 125, -38, -123, -110, 89, -29, 117, -93, -80, -117, -15,
				79, 1, 83, -49, -43, -118, -76, -64, -44, -71, 121, 29, 109, 108, 111, 76,
				-72, -48, 104, 66, -5, 17, -127, 5, 53, 75, 77, 27, 10, -17, 33, -41,
				-51, -123, -30, 26, -3, 3, 77, 94, 0, 122, -25, 22, -8, -100, -78, -75,
				-53, 17, -85, 86, 90, -29, -34, -127, -14, -102, -92, 36, 61, -110, -11, -95,
				50, -118, 76, -55, -12, -53, 109, -90, 14, -26, -9, -77, 98, 71, 47, 122,
				-44, -4, 17, 126, 54, 70, -56, 80, 97, 87, 76, 18, -31, 16, -67, -4,
				-39, -115, -112, -16, -47, -101, 107, -1, 91, 68, -89, -58, -99, -95, -105, 92,
				58, -123, 34, 9, 94, -71, 33, 126, 85, 60, 40, 70, -63, 27, -69, 75,
				15, -110, 64, 75, 51, 22, -118, -126, -123, 106, 57, 67, 113, -46, 92, -100,
				20, -22, 99, -10, -84, 77, -96, 56, -1, 34, 77, 65, 73, 100, 83, -18,
				-120, -45, -56, 75, 33, 6, -25, -39, -68, -11, -21, -103, -48, 17, 6, -62,
				-58, 127, 85, -59, 61, 65, 97, -126, -20, -104, -75, 87, 100, 39, 62, -111,
				-128, -81, 99, 82, 101, -79, 2, -73, 99, 2, -116, 31, -113, -12, 112, 77,
				-15, -43, -68, 88, -123, 53, -55, -123, -17, 41, 20, -15, -65, 20, 109, -4,
				-47, 26, -97, 115, 83, 53, -13, -65, 48, 48, 21, -93, -105, -4, -47, -67,
				-49, 97, 106, -11, -5, -85, -54, 51, 100, -55, 8, 127, 59, 99, 73, 47,
				26, -53, 37, 57, -30, -104, 120, -114, 76, 102, 96, 100, -46, -71, 105, -118,
				88, -57, -57, -50, -73, 51, -92, 114, 43, -98, -126, 51, 35, -7, -80, -32,
				42, 19, 116, 55, -65, -8, 99, -78, 1, 22, 104, -40, -18, -126, -63, -65,
				58, -47, 87, 29, -112, -18, -31, -16, -65, -34, 93, 40, -83, 66, 17, -67,
				62, -5, -11, -36, -56, 63, 63, -73, -42, 17, 120, 91, 91, -60, -85, -78,
				59, 90, 51, 101, -29, -34, 98, -28, -115, 75, 30, -8, 90, 33, 72, 75,
				82, 12, -103, -63, 75, 118, 110, -128, 60, 45, 24, -113, 27, 11, -54, -77,
				-4, 123, 1, 120, -78, 32, -81, 58, 37, -38, 14, 106, -62, 48, 80, -107,
				2, -55, 86, -22, -116, -87, -94, 99, 43, 3, -102, 75, 84, -32, 29, 77,
				-22, -22, 73, 51, -94, -7, 61, -77, -118, 3, -10, -65, 116, 98, 44, -83,
				-71, 55, 40, 78, -55, -81, -93, 14, -122, 22, 8, 50, 26, -26, 97, -44,
				59, -127, -126, 110, -82, -27, -15, -68, -43, 78, 22, -104, -60, -21, -41, -96,
				-72, 36, -2, -72, -70, -6, 107, 43, 114, -109, 11, -3, -40, 56, 39, 37,
				47, 87, 17, 3, -41, -107, 33, -80, -40, -85, 121, 125, 77, 66, 92, -26,
				-57, 85, -54, 108, 118, -103, -36, -100, -108, 115, 73, -128, -78, 40, -21, 47,
				62, 9, -25, 74, -81, -23, 7, 19, 4, -39, 37, 70, 106, -115, 74, -15,
				91, 41, 45, 38, -68, -18, -22, 84, 63, -74, 30, 107, -33, -115, 46, 75,
				-15, -32, -103, -18, -86, -109, 110, 31, 67, 46, -65, 51, -34, 90, 119, -19,
				-21, -2, 20, 53, 53, 8, 12, 36, 44, -45, 17, -17, -25, -80, 65, -33,
				115, 107, 119, 20, 99, 60, 18, -24, 0, -50, -27, 100, -74, -17, -63, 18,
				-80, -8, 16, 42, -109, -38, -122, 3, -52, -107, -8, -78, 13, -100, 30, -90,
				45, 84, 81, -121, 51, -25, -104, -3, -32, 112, 3, -109, -106, 104, 63, -103,
				27, 126, 104, 93, -106, -33, 102, 15, -30, -105, 92, -13, 25, 50, 45, -125,
				38, -76, 53, -107, 88, -92, 73, 87, 15, 70, -119, -2, -113, -45, -62, -125,
				-84, 96, -114, -124, -83, 16, -67, 61, -82, 106, 91, 65, 17, 93, 94, -97,
				-51, 109, 18, -44, -31, 55, -84, 56, 5, -14, -42, -6, -95, -71, -8, -98,
				86, 25, 100, 14, 27, -87, -27, -46, 47, -113, -2, -54, 83, -107, 71, -24,
				-126, 17, 120, 46, 57, 63, 64, -70, -87, 33, -13, -41, 42, 33, 116, -81,
				53, -12, -49, 14, 65, -105, -4, 105, -86, -45, -108, 93, 100, 83, -69, -85,
				93, -108, 66, 72, 5, -67, 1, -66, 58, 95, -46, 66, 61, 98, 64, -110,
				-6, -111, -125, -9, -86, -55, -119, -43, 66, 14, -18, -74, 42, -3, 34, -3,
				40, -45, 5, 68, -53, -58, -4, 101, -100, -111, 125, -19, -98, 126, -77, -35,
				40, -40, -84, 85, 126, -46, -12, -74, 91, 74, -120, 2, -18, -116, -77, -47,
				-77, 9, -98, -97, 2, 75, -77, 72, 70, 96, 118, 78, -99, -53, 25, 119,
				-117, -39, 73, -58, -13, 13, -10, 123, -27, 96, 11, 75, 25, -93, -49, -121,
				-34, -127, 81, -19, -12, 57, 56, -100, -89, -48, -85, -114, 9, -125, -43, 123,
				-67, 109, 84, 71, -74, 86, -67, 19, 1, -77, -52, -1, 1, -25, -78, 58,
				-89, -26, -78, -72, 91, -108, 95, -119, 6, 120, -85, -107, -115, 72, -96, -120,
				-98, -109, 38, 107, -49, 67, -10, -124, 31, 125, -66, 124, 40, -8, 58, -113,
				88, 115, 77, 76, -57, 35, -10, -94, -30, 58, 127, -75, -109, 125, 75, -86,
				1, -107, 77, -60, -56, -77, -45, 118, 51, 117, 89, -40, -21, 25, -97, 80,
				-26, 119, 86, -73, -84, -11, 50, 86, 35, -83, -4, 63, -3, 54, 48, -124,
				-39, -33, 108, 91, 41, -56, 127, -114, -40, 65, -118, -56, 78, 104, 35, 59,
				105, 45, -31, -17, 103, 37, 49, 91, -103, -71, 108, -69, 59, -128, -43, 54,
				-7, -67, -76, -111, 71, -42, 69, -118, 69, 99, -73, -59, 4, -78, -127, 97,
				-83, -103, 48, 53, 91, -15, -85, -25, -21, -39, 59, -107, 41, 7, -57, -73,
				-64, -125, 85, 38, -21, -82, 46, 126, 114, 8, 18, 108, 36, 15, -109, 76,
				91, 109, -125, 90, 88, -127, -54, -122, -79, -97, 42, 87, 103, -88, 21, 91,
				123, 2, -118, 5, 101, -54, -95, -96, 52, 48, -13, 126, -76, 120, 82, 114,
				26, 47, 27, 105, -105, 24, 88, -82, 28, 59, 48, 36, -70, -33, -5, -86,
				-29, -87, -30, -35, -9, -114, -11, 112, 95, 51, 38, 69, 31, -128, 70, -44,
				108, 65, -126, -11, 95, 7, -18, -83, 99, 7, -83, 114, 28, -53, 77, 8,
				-118, -57, 98, 3, 105, -26, 85, 87, 35, 120, -121, 56, -116, 9, -10, 47,
				-72, 95, 82, -29, -58, 123, 60, -18, -120, -51, 92, 19, -3, 105, 84, 92,
				-116, 8, -125, 106, -100, 75, 105, 40, 127, -36, 29, 3, -123, 125, 14, 30,
				-1, -74, 33, 81, -108, 30, 11, 67, -49, 29, 40, 127, -105, -83, -31, 105,
				17, -108, 23, -102, -15, 127, 19, -77, -23, -93, -56, 41, -125, -40, 23, -26,
				-45, 64, -53, 57, -8, -66, 58, -16, -127, -94, -6, 9, -70, -13, -93, 79,
				-78, 74, -13, 102, -120, -106, -106, 66, 1, 111, -53, 87, -81, -68, 48, -70,
				-84, -99, -96, -113, 4, 106, -79, 124, 26, 72, -74, 8, -28, -103, 101, 113,
				112, -108, -102, 82, -105, 101, -73, -13, -48, -89, -59, 101, 124, -65, -74, 68,
				-69, 119, 92, -101, -5, 75, -56, -10, 87, -79, -12, -35, 41, 48, -36, 95,
				-23, 100, -90, 127, 36, 93, 93, 26, -93, -70, 20, -45, 42, 77, 108, -12,
				-54, 99, 88, -60, 105, -23, 26, -104, -101, -108, 63, 68, 28, -52, -15, -28,
				9, 98, -128, 61, -63, -2, 69, -10, 97, 55, -77, -115, 87, -17, 40, 79,
				-26, 91, 58, 88, 116, 3, -119, 34, -10, 33, 35, -19, 88, 51, 84, -66,
				124, 88, -117, 117, -46, -21, 61, -65, 54, 7, 110, -94, -30, 102, 46, 3,
				119, -123, 70, 101, -34, 26, -74, 51, -120, -34, -70, 11, -96, 49, 104, -85,
				80, 109, 62, -81, 59, 60, 122, 54, -65, -108, -71, 27, -115, -3, 39, 49,
				-57, 103, -94, -5, 113, -95, -4, -41, 117, -74, 83, 93, -3, 96, 11, -74,
				-58, -37, 8, -116, 22, 70, -42, 99, 83, -15, -24, 49, 125, 31, 74, 31,
				94, -124, 15, -54, 64, 103, -78, -69, 14, 119, -48, 40, -75, 92, -33, 2,
				29, -79, 108, 8, 11, -19, -86, -98, 62, 7, -28, 48, 31, 120, 11, 112,
				-80, -127, 9, -103, 118, 30, -113, 65, 77, -27, 97, 43, -65, 88, -89, 39,
				-13, -34, -106, -106, -77, 82, 6, 5, -28, 6, 53, 44, 21, 13, -62, -64,
				1, -60, -87, -105, -56, 13, -79, 27, -49, 3, 61, -59, 38, 48, -116, -45,
				-102, -29, 116, -53, -70, -34, 99, -7, 125, 51, 26, 20, 118, 19, -32, 39,
				42, -124, -80, -128, 60, -123, 5, 69, -48, -95, 105, -33, -29, 121, -21, 61,
				92, 36, 48, 101, 81, -82, 83, -84, -114, -30, 65, -80, 68, -48, -87, -111,
				86, 106, -13, 42, -20, 22, 34, -118, -124, -118, 102, 108, -42, 63, 46, -120,
				78, 94, 13, 99, -107, -114, -68, -108, 114, -6, 123, -61, -118, 100, -22, -69,
				-83, -79, 124, 66, -27, 96, 115, -27, -109, -46, 59, 33, 86, 82, -121, -122,
				-64, -119, 20, 65, -58, -33, 62, -103, -114, 110, 10, 60, 67, 103, -116, 120,
				-90, -105, 6, 92, -23, -91, -17, 93, 34, -54, -63, -127, -76, -17, 35, 55,
				67, 28, 95, 125, -51, -100, -23, -84, 73, -65, 46, -101, -126, -20, -24, 122,
				50, 52, -47, 90, 94, -57, -74, 35, -56, 61, 18, -3, 79, 80, 28, 39,
				-84, 77, 126, -81, 97, -96, -57, 35, 123, -83, 113, 89, 53, -71, -23, 57,
				-12, 103, -97, 40, 9, 124, -62, 51, 81, -66, -87, 76, 55, -57, 24, 69,
				-48, 69, 69, -108, 30, 15, 24, -107, 61, 84, 24, 74, 87, -10, -92, 63,
				-57, 101, -65, 33, -9, -96, -103, -45, -81, 99, 29, -54, -42, 35, -84, 118,
				-83, -100, 3, -44, 69, -45, -106, 73, -72, -91, -55, 116, -84, 55, -116, 36,
				39, -22, 1, -25, 77, 41, 117, -47, 1, 24, 111, -117, 3, -46, -112, -97,
				-4, -71, 123, 83, 68, 79, 15, 2, 120, -59, 73, -80, -86, -121, 76, -18,
				-14, 93, 123, 5, 127, -51, 64, -4, -34, -34, 105, -52, 52, -93, 6, 94,
				20, 122, -17, -7, 17, -76, 40, 53, 65, 72, -5, -122, 117, -1, 105, 49,
				-72, 115, -51, 50, -74, -27, 54, -45, -90, 95, -38, 79, 26, 23, -34, 122,
				22, -122, -15, -58, -53, -75, 6, -79, 62, 33, 78, 105, -108, -40, -104, 126,
				-7, -12, -109, 73, -99, 9, -102, 105, 113, -31, 57, -115, -103, -101, 75, 2,
				80, 70, 7, -80, 76, -73, 13, -23, -116, 122, 39, -7, -46, -42, -87, -95,
				42, 38, -19, -30, -30, -77, 124, -84, -58, -12, 72, -67, 18, 23, 121, 39,
				-103, 12, -1, 15, -8, -88, -104, -15, 105, -71, -114, -28, 85, -22, 100, -121,
				99, 80, -100, -71, 2, -11, -101, -85, 65, 75, -90, -111, 111, 1, 42, 18,
				100, -62, -42, 40, 99, 28, -116, 64, -56, 78, -118, -48, 108, 107, -4, 48,
				121, 70, 11, -96, -116, -31, -81, -1, -55, -100, -7, -84, -67, -48, -15, 115,
				72, -111, -87, -85, 117, -23, -108, 30, -124, -103, 36, -96, 36, 3, 103, 27,
				-111, 110, 106, 68, -26, 55, -9, 126, -64, 78, 54, 82, -105, -76, 5, 82,
				-89, -3, 9, 32, -19, -88, 0, -107, -66, 67, 47, -8, 67, 25, 111, 61,
				-91, 11, -122, -53, -94, -46, 76, 108, -128, -8, -117, 106, -19, 7, -37, 97,
				43, -43, -5, -29, 112, 56, -56, 95, -37, 119, -97, -52, 120, -45, 19, -76,
				69, -97, -50, -106, -30, 30, 78, -20, -66, 54, -44, -76, -68, 29, 95, -54,
				25, -81, 76, -115, -101, -121, 38, -4, 47, 3, -100, 83, -118, -49, -101, 37,
				-42, -43, 119, -7, -87, 80, 56, -115, -28, 9, 77, -39, 77, -47, 100, -126,
				-87, -48, 38, -65, -50, 76, -8, -33, 78, -82, 118, -107, 10, 119, -72, -60,
				-53, -123, -100, 74, -75, -81, 11, 1, -38, 4, 49, -124, -103, 78, 99, 84,
				95, 69, -48, 54, -6, 100, -31, 78, -120, -58, 124, -13, 96, 41, 18, 29,
				17, -59, 47, 28, 88, 88, 8, 81, 120, 43, -39, -105, -66, -17, -125, 108,
			},
			matSize:   16,
			matNum:    16,
			mulRounds: 10,
			matIndex:  hexutil.MustDecode("0x147040f61e37dfbda8208477e319dcabb8c98c3b1fb97735c8ba3ad6d8a06938"),
			resultData: []int8{
				90, -119, 121, 34, 26, 24, -38, -81, 65, 111, -55, -40, -49, -71, -57, -13,
				-4, 125, 90, 116, 23, -128, 75, -71, -91, 49, 121, 93, -85, -27, 111, 49,
				122, -30, 111, 29, -103, 79, -109, 43, -20, 118, -19, 101, 97, 56, 73, -27,
				62, -105, -40, -66, 98, 49, 113, 74, 50, 43, 59, 12, 13, -79, 100, -16,
				-13, 44, 45, -78, -62, 71, -10, 90, 70, -94, -79, -25, 83, 76, -105, 56,
				95, -13, -116, -114, -44, -41, -95, 32, -32, -126, 73, -20, -22, 34, 19, 8,
				-19, 53, 61, 82, 107, -92, 43, 75, -109, 5, -88, 48, 49, 16, -128, 29,
				-50, 112, 7, -27, -91, -12, -39, 125, -39, -105, -90, -95, 15, -55, 77, -50,
				2, 115, -43, 10, -120, -10, 46, -87, -117, -88, 72, 8, -5, 39, 61, 49,
				-15, 92, 123, 85, -78, -10, 64, -21, 57, 113, -77, 27, -12, -41, -32, -53,
				-120, -45, 29, -14, -33, -47, 2, 26, -122, 53, -97, 60, 8, 54, -2, 61,
				49, -21, -125, 5, 120, -69, -38, 45, -102, -51, 39, 11, 66, -107, -11, -23,
				58, -123, -18, -55, 86, -41, 124, -40, -19, 87, -64, -60, 105, -79, 68, 13,
				79, 73, 102, 101, 109, -28, -77, -5, -28, -62, 120, 80, -3, 125, -107, 27,
				-30, -63, 123, 37, 21, 33, 88, -65, 96, 16, 71, 48, -20, 6, -62, -73,
				-73, 123, -21, 14, 1, -80, -126, -82, -117, 114, 112, 46, -15, 28, 116, -92,
			},
		},
		{
			matData: []int8{
				62, 63, -89, -35, -63, -12, -10, 123, -9, -99, -31, 101, -90, -122, 18, -41,
				-125, 117, -106, 82, -44, 85, -29, 122, 29, -46, 97, -114, -72, -63, 41, -86,
				-49, 125, -66, 19, 92, -30, -65, 122, 43, 5, 65, 113, 12, -42, -8, 48,
				-122, -42, 3, 31, 119, 91, -26, -99, -13, -90, 106, 59, -29, 53, 126, -23,
				-2, -14, -74, 9, -95, -47, -107, 36, -122, -99, -63, -43, -18, -2, 77, 19,
				-46, 37, 63, 78, -45, 53, -86, -86, -47, 68, 12, -53, -61, -67, -72, 12,
				23, 26, -119, -39, 18, -110, 47, -75, 70, -56, 44, 125, -31, 80, -20, -113,
				18, -48, 40, 21, 53, -64, 90, -122, 99, -11, -23, -34, -64, 61, -98, 57,
				17, -38, -124, 1, 60, -62, -3, 38, -120, -19, -121, -68, 55, 7, -79, -28,
				44, -116, 40, 27, 103, 42, 70, -46, 115, -102, 124, 70, 88, -73, -97, -90,
				-21, -77, -95, 97, -41, 16, -43, -110, 7, 81, 85, -4, 7, 38, 53, -20,
				-5, 100, -44, 53, -87, -89, 23, -16, -37, -89, 106, -4, -106, -124, -85, 102,
				56, 11, 57, -89, -64, -6, -16, 77, 68, 40, -73, -44, 16, 9, -122, -84,
				-69, -83, -74, 81, 93, -83, 64, -78, 63, 0, 2, 96, -43, -58, 18, 123,
				35, 90, 85, -74, 77, 31, -101, -77, -86, -74, 117, -8, 51, -76, -14, 113,
				-1, -88, -119, -17, -105, -74, -35, -20, -104, 55, -45, 16, -37, -106, 121, 5,
				-122, -46, -102, 27, -97, -42, 11, 82, 82, 55, 108, -26, 119, -54, 19, -71,
				3, -94, -112, 53, -89, 107, -127, 48, 37, -63, 69, -35, -53, 27, 38, -67,
				71, -110, -57, 78, 26, -96, 81, -43, 112, 64, 31, -63, 13, -53, -25, -60,
				-22, 104, 17, 8, -91, 127, -75, -67, 29, 36, 63, 47, -111, -30, 83, 15,
				-108, 41, 78, -103, -32, 72, 109, 64, -99, 115, 39, -48, 126, -95, -108, -107,
				54, 79, -124, -21, -11, -24, 86, -89, -10, -1, 125, -93, -111, -31, 15, -66,
				-20, 5, -36, -119, -39, -89, -51, 10, -116, -41, 89, -9, 40, 56, 13, -104,
				-47, 26, -93, -33, 113, 4, 84, 119, -13, 3, 83, -90, 23, -127, 68, 85,
				81, -16, -43, 123, 3, 1, -123, -110, -42, 35, 119, -70, 37, 101, 113, -3,
				18, -45, 106, 53, 72, -26, -52, -70, -43, 1, 26, -87, 17, 92, -76, -102,
				-79, 11, 19, 42, 70, 116, 70, -89, 87, -61, -105, 88, -23, -99, 36, -64,
				-18, 76, 3, -58, -10, -120, -83, 101, 24, 71, 53, -17, 50, 90, 71, -48,
				93, 91, 5, -40, -13, 68, -82, -86, -99, -29, -105, -44, 4, -112, -12, 91,
				67, 55, -14, -88, 104, 105, -1, 95, -80, 7, 89, -101, 24, -69, 38, 81,
				-56, -7, -93, -22, 120, -104, -30, -125, 26, 8, 65, 122, 55, 73, -6, 26,
				26, 97, -88, 79, -23, 110, 114, -91, 111, -33, 36, 65, -48, 36, 25, 109,
				33, 63, 22, -51, 3, 115, 96, -111, -66, -106, -69, 52, -79, 17, -118, 63,
				16, 46, -62, 77, -45, -47, 61, -125, -24, -114, -84, 86, 125, -33, 13, 62,
				-65, 63, 105, 114, 13, -39, -28, -59, 106, -40, 90, -8, -111, 116, -70, -48,
				94, 45, 32, -98, 69, -120, -12, -120, -72, -24, -126, 102, 27, 9, -10, 55,
				-8, 7, -45, 2, -28, 115, -101, -97, 4, -11, -111, -118, 42, 39, -123, -42,
				79, 112, -17, -5, -52, -30, 117, -114, 26, 60, 80, 28, -67, 86, 8, -99,
				-16, -33, -64, -31, -43, 59, -32, 26, -81, -104, 82, -48, -22, -128, -116, -25,
				-64, -117, -68, 67, 66, -94, 113, 122, 4, 100, -108, -27, 79, 87, 7, -45,
				-99, -5, -14, -77, -61, 111, -63, 62, 97, -26, -34, 112, 35, -58, 68, 17,
				111, 86, 62, 12, 40, -73, 21, -94, -78, -73, 54, -79, -25, -81, -92, 24,
				-72, 107, -34, -14, 85, -1, 19, 79, 115, -54, -84, -121, -64, 45, 78, 90,
				-100, -22, 11, 126, 118, -74, -93, -100, -16, 106, -73, -34, 93, 35, -116, -8,
				-61, 102, -102, -103, 22, -69, -10, -15, 15, -81, -51, 52, 95, 117, 118, 126,
				-41, -49, 55, -108, 31, 120, 99, 5, 63, -65, 74, -10, -16, -108, 12, -74,
				116, 32, -67, -5, -16, -38, 75, -42, -50, 31, -36, -123, 114, -40, 93, 110,
				-109, -113, 29, 71, 46, -23, 127, -2, 48, -18, 76, -76, 62, 44, 59, -24,
				-24, 52, 51, -40, -69, 0, 10, 19, 81, -112, -24, 65, 101, 25, 77, 49,
				-108, -71, 12, -74, -80, 85, -107, 24, 20, -128, 86, 116, 0, -116, -92, -63,
				-77, 7, -87, 82, 80, 115, 44, -13, 38, -25, 49, -97, 114, -87, -55, 59,
				-5, 122, 81, -118, -73, 9, 101, -49, 14, -85, -80, -117, -35, 87, 29, -10,
				-72, 28, -44, -91, 108, -7, 80, -8, -120, 92, -20, -89, -101, -62, -32, 15,
				-61, 98, 113, -74, -116, 63, 74, -62, -74, 61, -101, 38, -75, -42, 127, 61,
				-112, 60, 8, -86, 50, 79, 106, 121, -34, 87, -112, 25, -46, -78, -116, 120,
				9, 115, -53, 100, -90, 111, 82, 119, 13, 40, -39, 58, 108, 123, 81, -9,
				-39, 57, 43, 21, 85, 80, 123, -35, 34, -37, 90, 125, 102, -90, -102, 47,
				110, -17, -33, -106, -3, -15, 9, 48, 98, 66, 15, -87, 23, 5, -119, -66,
				59, -113, -42, -34, 118, 47, 122, -42, -12, 104, -125, 79, -49, 69, 44, -45,
				104, 121, -94, -58, 93, -42, 74, 45, 26, 64, 0, -101, 97, -43, -109, -3,
				-51, 81, -44, 103, 6, 10, -28, 78, -108, 94, -33, -58, 113, 61, 3, 44,
				33, -83, 77, -88, -120, 6, 84, -52, 1, 72, 7, -84, -72, -98, -27, 39,
				113, -5, -38, 57, -3, 55, -70, 53, -41, 84, -124, 65, -66, 26, 1, 49,
				-78, 126, 29, 94, 27, -30, -29, -62, 0, 84, -110, -62, 108, 84, 8, -75,
				13, -65, 6, -13, 70, -9, -109, -122, -7, -115, 96, 95, -107, -62, 118, 47,
				-120, 109, 37, -120, 106, 1, 99, -123, -27, 96, -126, -121, 2, -97, 75, -10,
				-17, 28, -16, -56, -31, 35, -116, -15, -31, -10, -6, 4, 118, -48, 29, -96,
				-5, 82, -83, 28, 15, -52, -60, 52, -112, -23, -38, -46, 96, -75, -9, 41,
				94, 99, -16, -111, -41, -59, 9, 76, 108, -20, -128, -46, 87, 40, 97, 106,
				-24, -105, -96, 58, -58, -72, 16, -52, 0, -95, 0, -10, -31, 74, -3, -30,
				119, -70, 115, 41, 123, 26, -72, 62, -9, 127, -117, -44, -49, 115, -26, -34,
				127, -89, 81, -99, 48, 74, -45, -88, -61, -83, -26, 121, 93, 93, -29, 116,
				-8, 41, 97, 39, -7, -44, 32, -71, -111, -5, 114, 123, 87, 113, 73, -30,
				113, -26, 116, -7, -32, 7, -18, -66, -59, -107, -35, -2, 86, 108, -121, -61,
				-2, 65, -85, -107, -86, -15, 25, 66, -82, 21, -23, -101, 21, 69, 93, 83,
				9, 126, -109, -9, -31, 119, -65, 80, -116, 21, 123, -43, 14, 91, -78, -115,
				11, -101, 112, -37, -119, 35, 83, -77, 84, -18, 110, -56, -35, -25, 106, 126,
				37, -5, -61, -95, -39, 1, 78, 51, -111, 96, -123, -17, 48, 31, -73, -112,
				20, 61, 9, -72, -95, -108, 79, 63, -35, 80, -83, -115, -94, -5, -63, -8,
				111, 61, -109, -78, -40, -109, -101, 14, 89, 46, 91, 0, -77, 57, -45, -19,
				91, 6, 74, 77, 77, 23, -69, -111, -127, 82, -45, -14, -128, -108, -124, -42,
				-123, -70, -89, 53, 78, 15, -72, -77, 92, 114, -60, 102, 93, -67, -68, 50,
				-97, -124, 102, 27, 48, 114, -52, 104, -83, 42, 42, -61, 83, 94, 54, 80,
				-42, 15, -87, -33, 126, -18, 119, -50, -94, -86, -53, 67, -103, 92, -114, 67,
				-100, 98, 54, 33, -58, -111, 98, 42, -27, 100, -48, -14, 88, 121, 36, 20,
				20, 81, -40, 5, -4, 77, -5, 121, 69, 28, 48, 7, -127, 0, 111, -111,
				66, 95, 78, -93, -41, -63, -93, 8, 63, -46, 102, 46, 38, -103, -116, 16,
				-45, -110, 31, 83, -44, -62, 30, 21, -105, 103, 9, 10, 2, -9, 24, -103,
				62, -10, 29, 67, -107, 48, -112, -9, 45, -76, 92, 112, -82, -119, 87, -50,
				26, 35, -22, 12, -102, 71, 83, -9, -33, -109, 24, -96, 22, 49, 110, -36,
				102, -94, 33, -102, 76, 70, 60, 16, 49, -115, -61, -115, 45, 34, 55, -41,
				-8, -61, 94, -38, -34, -4, 28, -94, 39, 46, -79, 86, 102, 22, 123, -110,
				92, -22, -79, -119, -97, -102, 65, 26, 64, -84, -7, 46, -23, 3, -42, 37,
				67, -64, 106, -77, 10, -108, -122, 26, 127, -23, 76, -35, 9, 109, -98, -99,
				43, 10, -71, 109, 44, 88, 95, -5, -92, -65, -68, 4, -51, -99, 13, -99,
				47, 38, 27, -96, 19, 100, -82, 18, -31, 57, 16, 49, 7, 21, 117, -62,
				101, -93, 124, 84, -122, 76, 117, 70, 28, -111, -2, 75, 39, 82, 23, -8,
				21, 71, -65, -10, 54, -89, 50, 98, -28, 119, 102, -29, -98, 36, -90, 59,
				64, -42, 102, 33, -82, 1, 80, 98, -120, 86, -7, 57, -9, 45, 39, 32,
				-101, 41, 24, -93, 90, -112, -51, 85, -121, 46, -58, 37, 98, -110, -39, 82,
				-27, 26, 77, -28, 66, -28, 56, 72, -1, -6, -118, -120, -128, 34, -122, -35,
				-17, 84, -39, -117, 67, -63, -51, 86, 126, -89, -89, 57, 93, -35, -17, 12,
				-69, -13, 46, 24, 85, 85, 24, 104, 39, -24, -9, 102, 122, 111, 106, 85,
				-107, -41, -26, 75, 33, 57, -63, -41, -49, 1, 127, -20, -104, 20, 50, -75,
				-58, 122, 52, 56, -110, -52, -83, -77, 55, 28, -1, 35, -91, -57, 93, -20,
				-29, -106, -80, 47, -127, 79, -103, -114, -88, -48, -124, -64, -108, -33, 124, -68,
				56, 101, 101, 100, -72, -2, 28, -37, -71, -1, 4, 21, -102, 21, 38, 71,
				106, 96, -65, -111, -126, 60, 42, -20, 85, 119, -52, -84, 61, 59, -29, -36,
				66, 81, 127, -66, -121, 58, 61, -104, -38, -77, 60, 58, 34, 86, -55, -93,
				-117, 58, -16, -84, 43, -7, 110, 29, 57, -64, 118, -96, 20, 6, 110, -87,
				-25, -113, 7, 82, -120, 28, -22, -18, 56, 3, 56, -12, -18, -94, -21, 118,
				96, 70, -114, 6, -39, -3, 19, 7, -97, -54, 112, 108, -13, -59, -111, 46,
				28, -92, -101, -67, -119, 127, 18, -18, -19, -13, -64, -114, -83, -44, -17, -33,
				-33, -72, 33, 62, 74, 32, -124, -67, -109, -67, 116, 111, 10, 60, 19, -122,
				-102, -79, -47, 81, 33, 103, -16, 21, 58, -34, -89, -76, -90, 99, -2, -29,
				-29, 27, -34, -25, 39, 47, 40, -10, 89, -121, 69, 75, -111, -30, 63, 16,
				-45, 107, 35, -124, 88, -52, 104, -68, 39, -111, -35, -52, 86, 44, -33, 113,
				-122, 90, 63, -56, 59, -17, 12, 37, -27, 115, 58, -84, 120, 73, 96, 27,
				-96, -79, -36, 95, 48, 46, -11, -70, -73, -106, -108, 48, 121, -49, 85, 103,
				94, 86, -110, -22, 115, -76, 109, -22, -79, -107, -128, 18, -37, 97, 21, 5,
				27, -13, -127, 0, 74, -84, 19, -98, 104, 40, -52, -107, -89, 48, 78, 42,
				-115, 116, 19, 5, -64, 84, -31, -123, 121, -30, -97, 112, 121, 110, 49, 11,
				-65, 87, 71, -7, 54, 46, -41, 9, -77, 42, 125, 45, -16, 8, 31, 19,
				117, -72, 82, -83, 44, -102, -120, 1, 2, -15, 51, -14, 28, 126, 16, 38,
				-100, 6, 101, 58, 12, -128, -103, -62, 99, 44, -124, 84, -74, 23, -2, 104,
				91, 105, -25, -41, 2, 48, -15, -47, 5, -101, 25, 16, 114, 83, -34, -86,
				-45, -100, -26, 60, 59, -94, -20, -82, -125, 87, 127, 96, 24, 13, -59, -102,
				84, 84, 4, 13, 10, -102, 111, -56, -72, -106, -91, -86, -106, 24, -101, -87,
				-121, 15, -58, 123, 127, -53, 88, -6, -1, 23, 126, -74, -102, -36, 6, -123,
				54, 10, 17, 104, 108, -38, 60, -124, 40, -2, -63, -119, -28, -89, -53, 42,
				16, -26, 92, 120, 97, -10, -13, -38, 53, 87, 75, -54, -92, 47, -114, 87,
				88, -37, 112, -104, 50, -84, -36, -85, -39, 20, -69, 97, 53, 124, 71, -113,
				-32, -78, 93, -108, 15, 82, 60, -123, -49, -77, 38, 10, 40, 98, 29, -107,
				-67, 55, 93, 57, -121, 111, 51, 28, 107, -3, 120, -119, 70, 84, -67, 52,
				-12, -22, 2, 1, 21, 10, 14, 114, 58, -44, 70, -51, 5, -106, 47, -107,
				42, 3, 33, -61, 86, -124, 2, -83, 79, 114, -5, 110, 37, -59, 37, -55,
				-18, -10, 125, -42, 78, -65, -76, 73, -99, 103, -111, -8, 57, 0, -8, 49,
				-94, 101, 63, -37, -80, -29, 127, -77, -69, 96, 44, 73, 38, 17, 126, -37,
				110, 7, -13, -40, 9, 115, 115, 73, -98, -72, 17, 63, 126, -31, -56, -81,
				-30, 28, 56, 7, -116, -126, 88, -103, 102, 32, 72, 15, -112, 99, -98, -20,
				-104, 20, 55, 118, -106, 45, -11, -72, -55, 80, -103, 41, 53, 61, 85, -33,
				38, 117, 50, 97, 77, -86, 122, -112, -88, -30, -126, -17, 87, 10, -112, 65,
				-82, 70, 110, -123, -125, 93, 79, 123, 18, -54, 127, 77, 84, 24, -17, -41,
				-108, 89, 36, 89, -75, -17, -51, -34, -14, -107, 125, 23, 81, -119, -18, -124,
				-6, 3, -109, 93, 95, 75, -77, -10, -93, -29, -82, 42, -83, 97, -96, 31,
				-28, 35, 63, 7, -111, 107, -16, -66, -54, 109, 107, -118, -85, 44, 84, -121,
				-45, 77, 31, -81, 77, 81, 66, 65, 35, 41, -69, 15, -39, 32, -39, -12,
				63, 0, 13, 22, 84, 39, 72, 88, 11, 119, 66, 65, 34, -46, -76, 5,
				28, 111, 114, 98, -10, 124, 5, 93, -5, -101, 112, 70, 6, 39, -52, -128,
				121, 110, 102, -124, -2, -31, 118, 4, -97, 3, -8, -99, -107, -11, -37, -58,
				-118, -24, -103, -77, -16, -64, -68, -80, -123, 41, -40, 54, 48, 12, 84, 93,
				54, -100, 41, 10, -58, 79, -96, -43, -59, 1, -111, -11, -79, 7, -17, 62,
				24, 51, -4, 20, 49, 113, -77, -110, 93, 40, 127, -103, 3, -72, 26, -56,
				-44, 76, 18, -59, -47, -31, -118, 50, 27, -81, 66, 5, 93, 46, -122, 123,
				-92, 73, -75, -58, 122, -102, -60, -100, -67, 121, -49, 0, 68, -75, -36, 124,
				83, 71, -84, -121, -91, 5, 118, -39, 85, 95, -53, -13, -56, -111, -60, 109,
				-86, -26, 83, -125, 52, 98, 89, 112, 48, 84, -89, 90, 92, 43, -36, -13,
				-104, -122, -16, -19, 45, 51, 67, 69, -9, 86, -62, 34, -68, 21, -86, -72,
				-61, -88, 43, -93, -111, 119, -31, -23, -83, 38, -32, -91, -42, 109, 125, -39,
				-22, 76, -96, -95, 70, -94, -16, -78, 74, -64, 39, -55, 123, -42, -32, -118,
				-119, -30, 3, 82, 83, -58, -123, -2, -82, 101, -88, 61, 120, 4, -40, 126,
				-85, -25, 31, -81, -45, -97, -88, -7, -40, -60, -21, -120, 10, 84, 112, -16,
				-109, -120, 44, -41, 127, -65, 14, 109, 72, 126, 74, -50, 2, 15, 93, 39,
				86, 87, 119, 99, 121, -54, -80, 15, -66, 66, 35, -39, 94, -99, -29, -78,
				-108, 18, 62, -22, 69, -113, 12, 126, -49, 123, 88, -71, -37, 110, 60, -68,
				-2, -98, 59, 29, -109, -52, 21, 40, -83, 66, -4, 38, -122, 19, -96, 114,
				78, 18, -65, -32, -68, 74, 84, -26, 74, -77, -6, 41, 22, -4, 52, -24,
				37, 95, -112, 73, -104, -26, 38, 34, -125, -116, 122, 27, -51, 85, -109, -82,
				114, 109, 92, 32, -79, -122, 117, 2, 73, -4, -52, -52, -107, 112, 72, -46,
				-50, -12, -121, -22, 51, -94, -34, -58, -24, 124, -97, 68, -93, -88, 3, 86,
				64, -53, -33, 69, 29, -73, 69, 114, -42, 15, 9, -77, -20, 50, 81, -88,
				22, -114, 37, 48, 16, 66, 47, 49, -63, -128, 95, -39, -18, -7, 119, 82,
				-37, -127, 37, -120, -34, 107, 7, -87, -95, 66, -125, -86, 24, 104, -108, 102,
				-26, 3, 120, 59, -91, -115, -69, -76, -24, 79, -122, 28, -111, -2, -90, 29,
				37, -52, 99, -126, -4, -46, 76, 117, 23, 65, 121, 61, -111, -122, 100, -85,
				18, -101, 13, -104, -46, 7, -82, 37, 41, 88, -118, -12, 11, 108, 53, 7,
				-1, 19, 115, 63, 63, -115, -79, 35, 45, 37, -101, 70, -33, -123, -73, 57,
				-119, -105, 0, 37, 15, -125, -54, 2, -85, -88, 68, 96, 90, -11, 54, 120,
				61, -77, -47, 12, 32, 53, 68, -107, 30, -7, -38, -127, -17, -40, 23, 56,
				96, -74, 92, 62, -105, 72, -14, -116, -126, 25, 15, -59, 37, 15, -47, 35,
				-32, -61, -116, 100, 125, 78, 25, 59, 15, -50, -101, -82, -91, -12, -47, 5,
				-22, 111, -45, 78, 17, -117, -58, -8, -24, -95, 24, 111, 75, -113, 74, -81,
				73, -106, -85, 78, 126, 52, 90, -8, 90, 36, 110, 48, -104, 97, -3, 10,
				68, -57, 76, -56, -35, -106, -120, -97, 64, -58, -41, 56, -68, -22, 37, 96,
				41, 72, 61, -54, 53, 116, -68, 56, -127, 55, 112, 113, 90, 16, 119, -31,
				33, 107, 14, -117, 12, 14, 74, -94, 29, -103, 94, 82, -38, 9, -116, -57,
				30, -70, 43, -20, 86, 6, -32, 106, 19, 85, 79, 5, 97, -80, -87, 121,
				42, -72, -117, -44, -25, 32, 7, -55, -25, -21, 41, 16, -29, 93, -20, -3,
				105, -94, -20, -51, 24, -58, 10, 29, -35, -59, 61, 25, 63, 37, -5, 65,
				118, -114, 116, 92, 78, 42, -21, -79, -31, 25, -87, 76, 28, 102, 2, -29,
				30, -74, -10, -99, -99, 71, 52, -105, -51, -103, 117, 68, -44, -105, 41, 111,
				-87, -74, -86, 17, -117, -80, -57, -44, 122, 31, 58, 17, 124, -103, -79, 70,
				-15, -1, -125, 15, 84, -122, -80, 84, -30, -56, -100, -69, 117, 102, -80, 0,
				-78, 28, 7, 51, 124, -106, 124, 44, 124, 3, 49, -24, 82, -109, -48, 41,
				28, -17, 9, -28, 96, 21, 89, 15, 65, -4, 46, 5, 2, -76, 54, -70,
				-91, -96, -18, 76, 91, -64, -36, -79, 52, -57, 80, -103, 47, 100, -9, -94,
				-45, -87, -126, 40, -55, 56, -114, -111, 28, -28, 29, 86, -76, 11, -31, -21,
				-105, 55, 68, -98, -121, 48, 123, 94, 110, -3, -70, 54, 83, 118, 4, 4,
				58, -87, 96, -125, -112, 72, -44, -66, -46, 46, 79, -52, -1, 120, 55, -44,
				-108, -116, 68, -61, 47, -54, 79, -4, -57, -41, 29, -36, 95, 83, -41, 23,
				-81, -64, -86, -50, -1, -106, -13, 120, 80, 61, 112, -126, -90, 91, -25, -5,
				-42, -113, -114, -2, 27, 71, -98, -20, 73, -125, -119, -31, -117, 107, 97, 94,
				-102, 121, 42, 116, -73, 23, -66, 38, 22, 126, 110, -23, 53, 78, -18, -46,
				-30, -91, 67, -23, 53, -118, 1, 113, 16, -74, -1, 95, -35, -120, 2, -62,
				-88, 6, 46, 98, 93, 27, 81, -62, -76, 35, -82, -107, -19, -71, 62, 66,
				108, 38, -119, -32, 111, 11, -108, -36, -95, -106, -127, -42, -57, -105, 105, 33,
				-38, 95, -98, -38, -15, -109, -75, 12, 120, 73, -83, 57, 120, -11, -14, 86,
				-15, -44, 110, 54, -64, -41, -117, 59, 42, -128, -56, 44, -121, 52, 80, 65,
				-10, -55, 40, 84, -59, 97, 67, 55, -11, 42, -64, 99, 41, -23, 50, 70,
				-5, 107, 111, -49, -79, 37, 107, 56, 0, 103, -87, -35, -53, -68, 113, 116,
				83, -123, -80, -94, -13, -127, -75, 104, -111, -21, 65, 34, 38, -89, 95, -34,
				-63, -38, 30, 106, -61, 16, -55, -5, -82, -61, -38, 6, -68, -19, 111, -74,
				91, -89, -128, 6, -32, 48, -65, -57, 113, 106, 0, 62, -45, -127, -88, -112,
				99, -72, 91, 102, 114, 13, -3, 33, 111, 78, -78, 32, 93, 95, -122, 42,
				127, 67, 36, -89, -31, 25, 96, 76, 16, 81, 5, -49, -6, 99, -5, -67,
				66, 50, 66, -126, -70, 33, -30, -43, -62, 47, 121, -120, -34, -62, -31, -94,
				102, 4, -92, -110, -122, 75, 82, 126, -117, -56, -81, -100, 44, 49, -90, 115,
				-21, -96, -88, 114, -78, -3, -98, 75, 111, -99, 28, -64, 82, -109, 44, 29,
				114, 117, -46, -1, -85, 14, -5, -96, -117, -35, 23, -91, -76, 95, -99, 116,
				111, -55, -21, 78, -4, -38, -106, 33, -118, 13, -118, -122, -81, -7, -17, 18,
				-105, 113, 111, 119, 65, -77, -99, -89, -24, -5, 72, -47, -107, 58, -57, 107,
				-94, -67, 36, 53, -79, -56, -105, -15, -5, 8, 99, -3, 0, -86, 76, -53,
				-99, 31, 120, 95, -85, -72, -42, -36, -64, -72, 91, 109, 50, 124, -120, 73,
				24, -1, 58, -72, -21, 124, -92, 81, -23, 54, 20, -38, -30, -15, 6, 107,
				99, -23, -2, -37, 115, 11, -87, 118, 93, 77, -65, -79, 0, 34, 86, 16,
				-25, 108, 19, 91, -123, 34, 125, -109, 92, 52, 8, -124, 55, 33, -28, 92,
				-32, 51, -119, -7, 25, 110, 69, -24, 7, 89, -114, 8, -47, -70, -115, 0,
				10, 86, 29, 6, -58, 93, 24, 70, -13, -30, -100, 18, -100, -95, 30, -4,
				-23, 11, -32, -87, -43, -26, -31, -72, -95, -22, 40, -91, -125, 79, -62, 67,
				119, -41, 57, 52, -105, 84, 73, 78, 30, 87, -65, 15, -124, -39, -37, -18,
				-70, 29, -36, -96, 68, 97, 21, -23, -60, 44, -86, -53, 77, 101, 38, 69,
				-66, 78, -27, 75, 55, -59, -12, 41, -46, -47, 67, -30, -76, -5, -34, -61,
				-126, -111, 111, 0, 85, 77, -5, 4, 89, 127, 85, -117, 31, 48, 121, -101,
				-37, -109, 69, -54, -7, -84, -114, 105, 43, -39, 48, -33, 112, 119, 34, 108,
				-53, -24, -116, -28, 99, 24, 6, -127, -42, -102, -27, 56, 23, -83, -24, -43,
				-29, -111, 44, -83, -93, -111, -121, -74, -73, -120, 31, -109, -28, 27, -122, 40,
				-73, -78, -105, 54, 101, -104, -1, 49, -116, 54, -102, -25, -11, 21, -43, -59,
				-27, -81, 59, -12, -128, 19, 98, 80, 116, 33, 21, 45, -31, -43, 91, -42,
				-59, -52, -13, 83, 75, 94, 50, -11, -103, 93, -95, 46, -127, -71, -4, 40,
				-39, 79, 77, 121, -33, -6, 81, 25, -36, 85, 111, 68, -74, -6, -50, -1,
				123, -48, 65, -32, -37, 11, 26, 22, 2, -100, 99, 68, -126, 98, -112, -85,
				47, 90, 3, 71, 51, 56, 59, -71, -89, -3, -54, -38, -5, 43, 96, -81,
				118, 5, -79, -72, 6, 37, -65, -49, -27, 97, 96, -35, 121, 117, -56, 16,
				111, 45, 30, 36, -46, -63, 78, -3, -91, 61, -29, 21, 6, 90, -93, -89,
				-103, 66, 45, -64, -116, -78, 4, 100, -114, 27, 91, -54, -86, -48, -4, 53,
				60, 27, 112, -80, -76, -106, 34, 81, 119, -122, -119, -48, 78, -21, 55, -54,
				-42, 50, 72, 58, 66, 39, 48, -109, 11, 103, -49, 21, -50, -6, 84, 72,
				-126, -98, 53, 38, 92, 76, 90, 75, -75, 23, 113, -45, -3, -40, 45, 10,
				-106, 23, -81, -27, 107, -49, -117, -93, 85, -84, -25, -128, 18, 64, -94, 46,
				-81, -58, -103, 123, 29, 42, -15, 25, -30, 8, 108, 38, 0, -89, 75, 127,
				-48, -27, 121, 40, -115, -27, 73, 24, 74, 127, 40, -119, -12, -45, -121, -52,
				26, -54, 104, 90, 35, -12, -9, -54, 120, 17, -97, 79, 64, -16, 66, -65,
				-5, 80, -2, -116, -116, 44, 14, -26, 119, 99, 48, 83, 74, 101, 91, 8,
				-17, -88, -97, 30, -72, -62, 81, -25, 89, -121, 83, 95, 75, 46, 113, -80,
				56, 115, 90, -32, -123, 68, 54, 14, -112, -42, 25, 118, -110, 82, -102, 14,
				-98, 74, -54, -71, 87, -4, 50, -18, 3, -83, 110, -117, 36, 16, 3, -109,
			},
			matSize:   16,
			matNum:    16,
			mulRounds: 10,
			matIndex:  hexutil.MustDecode("0x74621b3d6f090244d2037886d02a5e690d43020c9b5cc3eec6bf9a0c5dc0f774"),
			resultData: []int8{
				112, -14, 62, 84, 38, 71, 19, -109, 71, 44, -46, -18, -86, -77, 74, 55,
				-119, 18, 71, 125, 83, -35, 77, -113, 65, -111, -87, 2, 60, -29, 106, 3,
				27, -10, -3, 12, 101, -36, -1, 59, -93, 35, -44, -69, -41, 76, 57, 127,
				-41, -29, -120, 101, -52, -16, -57, -59, 85, 71, 9, -58, 99, -64, -82, -111,
				-83, 80, 68, 19, -74, 106, 57, 29, -87, 124, 100, -103, 8, -15, 20, 8,
				-101, -73, 85, -84, -10, 5, -13, -64, 122, 56, 94, -55, -56, -117, -108, 46,
				-108, -77, 10, -18, -81, -84, -3, -71, -63, 74, 100, 43, -27, -117, -126, 0,
				-48, -108, -36, -24, -78, -43, 13, -82, 3, 11, -32, -84, 64, 11, -12, 112,
				-39, 51, -52, 24, -70, -74, 20, 116, -81, -53, -14, 55, -57, 63, -44, 76,
				-122, 5, 82, 72, 1, -59, -41, 100, 121, 24, -42, 55, 95, 54, -94, -47,
				-92, -86, 41, 58, 90, -5, 35, 25, 91, 86, 93, -106, 31, 48, -84, -12,
				120, 46, -107, -10, -56, 119, 34, 123, 75, -18, -50, 64, 42, 2, 74, 67,
				120, 88, 14, -7, -101, 104, 28, -72, -48, -98, 36, -82, 87, -115, 122, 82,
				-7, 41, -60, -78, -76, -30, 99, -16, 26, 126, 58, 37, 20, 48, 28, 73,
				-68, -100, 111, 122, 90, 111, 117, -84, 62, -93, 27, -87, 5, 74, -57, 35,
				-127, 108, -64, -42, -42, 44, 54, 18, 80, 71, 81, 117, -81, -122, 117, 87,
			},
		},
	}

	for i, tt := range tests {
		matList := make([]matrix.Matrix, tt.matNum, tt.matNum)
		for j := 0; j < tt.matNum; j++ {
			matList[j] = matrix.New(tt.matSize, tt.matSize, tt.matData[j*tt.matSize*tt.matSize:(j+1)*tt.matSize*tt.matSize])
		}

		result := *mulMatrix(matList, tt.matSize, tt.matNum, tt.mulRounds, tt.matIndex)
		want := matrix.New(tt.matSize, tt.matSize, tt.resultData)

		if !reflect.DeepEqual(result, want) {
			t.Errorf("mul matrix result %d: content mismatch: result %x, want %x", i, result, want)
		}
	}
}

// TestHashMatrix tests hashMatrix
func TestHashMatrix(t *testing.T) {
	tests := []struct {
		matData  []int8
		matSize  int
		hashData [32]byte
	}{
		{
			matData: []int8{
				-81, -63, -128, -82, -92, 105, -79, -2, 77, 70, 36, 113, -29, -93, -110, 16,
			},
			matSize: 4,
			hashData: [32]byte{
				185, 155, 81, 132, 236, 91, 31, 48, 234, 85, 170, 38, 120, 53, 125, 76, 222, 84, 202, 70, 226, 182, 92, 232, 10, 138, 70, 50, 0, 125, 216, 50,
			},
		},
		{
			matData: []int8{
				90, -119, 121, 34, 26, 24, -38, -81, 65, 111, -55, -40, -49, -71, -57, -13,
				-4, 125, 90, 116, 23, -128, 75, -71, -91, 49, 121, 93, -85, -27, 111, 49,
				122, -30, 111, 29, -103, 79, -109, 43, -20, 118, -19, 101, 97, 56, 73, -27,
				62, -105, -40, -66, 98, 49, 113, 74, 50, 43, 59, 12, 13, -79, 100, -16,
				-13, 44, 45, -78, -62, 71, -10, 90, 70, -94, -79, -25, 83, 76, -105, 56,
				95, -13, -116, -114, -44, -41, -95, 32, -32, -126, 73, -20, -22, 34, 19, 8,
				-19, 53, 61, 82, 107, -92, 43, 75, -109, 5, -88, 48, 49, 16, -128, 29,
				-50, 112, 7, -27, -91, -12, -39, 125, -39, -105, -90, -95, 15, -55, 77, -50,
				2, 115, -43, 10, -120, -10, 46, -87, -117, -88, 72, 8, -5, 39, 61, 49,
				-15, 92, 123, 85, -78, -10, 64, -21, 57, 113, -77, 27, -12, -41, -32, -53,
				-120, -45, 29, -14, -33, -47, 2, 26, -122, 53, -97, 60, 8, 54, -2, 61,
				49, -21, -125, 5, 120, -69, -38, 45, -102, -51, 39, 11, 66, -107, -11, -23,
				58, -123, -18, -55, 86, -41, 124, -40, -19, 87, -64, -60, 105, -79, 68, 13,
				79, 73, 102, 101, 109, -28, -77, -5, -28, -62, 120, 80, -3, 125, -107, 27,
				-30, -63, 123, 37, 21, 33, 88, -65, 96, 16, 71, 48, -20, 6, -62, -73,
				-73, 123, -21, 14, 1, -80, -126, -82, -117, 114, 112, 46, -15, 28, 116, -92,
			},
			matSize: 16,
			hashData: [32]byte{
				107, 217, 239, 178, 185, 34, 46, 164, 237, 26, 195, 59, 18, 113, 214, 54, 94, 237, 222, 106, 158, 45, 2, 73, 36, 45, 57, 47, 204, 6, 87, 142,
			},
		},
		{
			matData: []int8{
				112, -14, 62, 84, 38, 71, 19, -109, 71, 44, -46, -18, -86, -77, 74, 55,
				-119, 18, 71, 125, 83, -35, 77, -113, 65, -111, -87, 2, 60, -29, 106, 3,
				27, -10, -3, 12, 101, -36, -1, 59, -93, 35, -44, -69, -41, 76, 57, 127,
				-41, -29, -120, 101, -52, -16, -57, -59, 85, 71, 9, -58, 99, -64, -82, -111,
				-83, 80, 68, 19, -74, 106, 57, 29, -87, 124, 100, -103, 8, -15, 20, 8,
				-101, -73, 85, -84, -10, 5, -13, -64, 122, 56, 94, -55, -56, -117, -108, 46,
				-108, -77, 10, -18, -81, -84, -3, -71, -63, 74, 100, 43, -27, -117, -126, 0,
				-48, -108, -36, -24, -78, -43, 13, -82, 3, 11, -32, -84, 64, 11, -12, 112,
				-39, 51, -52, 24, -70, -74, 20, 116, -81, -53, -14, 55, -57, 63, -44, 76,
				-122, 5, 82, 72, 1, -59, -41, 100, 121, 24, -42, 55, 95, 54, -94, -47,
				-92, -86, 41, 58, 90, -5, 35, 25, 91, 86, 93, -106, 31, 48, -84, -12,
				120, 46, -107, -10, -56, 119, 34, 123, 75, -18, -50, 64, 42, 2, 74, 67,
				120, 88, 14, -7, -101, 104, 28, -72, -48, -98, 36, -82, 87, -115, 122, 82,
				-7, 41, -60, -78, -76, -30, 99, -16, 26, 126, 58, 37, 20, 48, 28, 73,
				-68, -100, 111, 122, 90, 111, 117, -84, 62, -93, 27, -87, 5, 74, -57, 35,
				-127, 108, -64, -42, -42, 44, 54, 18, 80, 71, 81, 117, -81, -122, 117, 87,
			},
			matSize: 16,
			hashData: [32]byte{
				25, 73, 65, 148, 169, 168, 205, 188, 121, 190, 226, 51, 71, 8, 116, 6, 50, 117, 61, 155, 167, 136, 66, 216, 61, 204, 221, 195, 139, 72, 196, 91,
			},
		},
	}

	for i, tt := range tests {
		mat := matrix.New(tt.matSize, tt.matSize, tt.matData)
		result := hashMatrix(&mat, tt.matSize)

		want := bc.NewHash(tt.hashData)

		if !reflect.DeepEqual(*result, want) {
			t.Errorf("hashMatrix %d: content mismatch: result %x, want %x", i, *result, want)
		}
	}
}

// convert []byte to []*bc.Hash
func bytesToSlicePointerHash(src []byte) []*bc.Hash {
	var sbh []*bc.Hash
	for i := 0; i < len(src)/32; i++ {
		s := src[i*32 : (i+1)*32]
		tmp := bc.BytesToHash(s)
		sbh = append(sbh, &tmp)
	}

	return sbh
}
